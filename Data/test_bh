In all my years in business, I have yet to hear someone say: “I love corporate politics.” On the other hand, I meet plenty of people who complain bitterly about corporate politics—sometimes even in the companies they run. So, if nobody loves politics, why all the politics?  Political behavior almost always starts with the CEO. Now you may be thinking: “I hate politics, I’m not political, but my organization is very political. I clearly didn’t cause this.” Sadly, you needn’t be political to create extreme political behavior in your organization. In fact, it’s often the least political CEOs who run the most ferociously political organizations. Apolitical CEOs frequently accidentally encourage intense political behavior.  What do I mean by politics? I mean people advancing their careers or agendas by means other than merit and contribution. There may be other types of politics, but politics of this form seem to be the ones that really bother people.  How it happens A CEO creates politics by encouraging and sometimes incenting political behavior—often accidentally. For a very simple example, let’s consider executive compensation. As CEO, senior employees will come to you from time to time and ask for an increase in compensation. They may suggest that you are paying them far less than their current market value. They may even have a competitive offer in hand. Faced with this confrontation, if the request is reasonable, you might investigate the situation. You might even give the employee a raise. This may sound innocent, but you have just created a strong incentive for political behavior.  Specifically, you will be rewarding behavior that has nothing to do with advancing your business. The employee will earn a raise by asking for one rather than you automatically rewarding them for outstanding performance. Why is this bad? Let me count the ways:  The other ambitious members of your staff will immediately agitate for raises as well. Note that neither this campaign nor the prior one need be correlated with actual performance. You will now spend time dealing with the political issues rather than actual performance issues. Importantly, if you have a competent board, you will not be able to give them all out-of-cycle raises, so your company executive raises will occur on a first-come, first-serve basis. The less aggressive (but perhaps more competent) members of your team will be denied off-cycle raises simply by being apolitical. The object lesson for your staff and the company will be the squeaky wheel gets the grease and the political employee gets the raise. Get ready for a whole lot of squeaky wheels. Now let’s move on to a more complicated example. Your CFO comes to you and says that he wants to continue developing as a manager. He says that he would like to eventually become a COO and would like to know what skills he must demonstrate in order to earn that position in your company. Being a positive leader, you would like to encourage him to pursue his dream. You tell him that you think that he’d be a fine COO some day and that he should work to develop a few more skills. In addition, you tell him that he’ll need to be a strong enough leader, such that other executives in the company will want to work for him. A week later, one of your other executives comes to you in a panic. She says that the CFO just asked her if she’d work for him. She says that he said that you are grooming him to be the COO and that’s his final step. Did that just happen? Welcome to the big time.  How to minimize politics Professionals vs. Amateurs Minimizing politics often feels totally unnatural. It’s counter to excellent management practices such as being open minded and encouraging employee development.  The difference between managing executives and managing more junior employees can be thought of as the difference between being in a fight with someone with no training and being in a ring with a professional boxer. If you are in a fight with a regular person, then you can do natural things and they won’t get you into much trouble. For example, if you want to take a step backwards, you can pick your front foot up first. If you do this against a professional boxer, you will get your block knocked off. Professional boxers train for years to take advantage of small errors in technique. Lifting your front foot first to take a step backwards will take you slightly off balance for a split second and that’s all your opponent will need.  Similarly, if you manage a junior employee and they ask you about their career development, you can say what comes naturally and generally get away with it. As we saw above, things change when you deal with highly ambitious, seasoned professionals. In order to keep from getting knocked out by corporate politics, you need to refine your technique.  The Technique As I developed as a CEO, I found three key techniques to be extremely useful in minimizing politics.  1. Hire people with the right kind of ambition—The cases that I described above might involve people who are ambitious, but not necessarily inherently political. All cases are not like this. The surest way to turn your company into the political equivalent of the US Senate is to hire people with the wrong kind of ambition. As defined by Andy Grove, the right kind of ambition is ambition for the company’s success with the executive’s own success only coming as a by-product of the company’s victory. The wrong kind of ambition is ambition for the executive’s personal success regardless of the company’s outcome.  2. Build strict processes for potentially political issues and do not deviate—Certain activities attract political behavior. These activities include:  Performance evaluation and compensation Organizational design and territory Promotions Let’s examine each case and how you might build and execute a process that insulates the company from bad behavior and politically motivated outcomes.  Performance and compensation—Often companies defer putting performance management and compensation processes in place. This doesn’t mean that they don’t evaluate employees or give pay raises; it just means they do so in an ad hoc manner that’s highly vulnerable to political machinations. By conducting well-structured, regular performance and compensation reviews, you will ensure that pay and stock increases are as fair as possible. This is especially important for executive compensation as doing so will also serve to minimize politics. In the example above, the CEO should have had an airtight performance and compensation policy and simply told the executive that his compensation would be evaluated with everyone else’s. Ideally, the executive compensation process should involve the board of directors. This will a) help ensure good governance and b) make exceptions even more difficult.  Organizational design and territory—If you manage ambitious people, from time to time, they will want to expand their scope of responsibility. In the example above, the CFO wanted to become the COO. In other situations, the head of marketing might want to run sales and marketing or the head of engineering may want to run engineering and product management. When someone raises an issue like this with you, you must be very careful about what you say, because everything that you say can be turned into political cannon fodder. Generally, it’s best to say nothing at all. At most, you might ask “why?”, but if you do so be sure not to react to the reasons. If you indicate what you are thinking, that information will leak, rumors will spread and you plant the seeds for all kinds of unproductive discussions. You should evaluate your organizational design on a regular basis and gather the information that you need to decide without tipping people to what you plan to do. Once you decide, you should immediately execute the re-org: don’t leave time for leaks and lobbying.  Promotions—Every time your company gives someone a promotion, everyone else at that person’s level evaluates the promotion and judges whether merit or political favors yielded the promotion. If the latter, then the other employees generally react in one of three ways:  They sulk and feel undervalued They outwardly disagree, campaign against the person, and undermine them in their new position They attempt to copy the political behavior that generated the unwarranted promotion Clearly, you don’t want any of these behaviors in your company. Therefore, you must have a formal, visible, defensible promotion process that governs every employee promotion. Often this process must be different for people on your own staff (the general process may involve various managers who are familiar with the employee’s work, the executive process should include the board of directors). The purpose of the process is twofold. First, it will give the organization confidence that the company at least attempted to base the promotion on merit and second, the result of the process will be the information necessary for your team to explain the promotion decisions that you made.  3. Be careful with “he said, she said”—Once your organization grows to a significant size, members of your team will, from time to time, complain about each other. Sometimes this criticism will be extremely aggressive. Be very careful about how you listen and the message that it sends. Simply by hearing them out without defending the employee in question, you will send the message that you agree. If people in the company think that you agree that one of your executives is less than stellar, that information will spread quickly and without qualification. As a result, people will stop listening to the executive in question and they will soon become ineffective.  There are two distinct types of complaints that you will receive:  Complaints about an executive’s behavior Complaints about an executive’s competency or performance Generally, the best way to handle complaints of type 1 is to get the complaining executive and the targeted executive in the room together and have them explain themselves. Usually, simply having this meeting will resolve the conflict and correct the behavior (if it was actually broken). Do not attempt to address behavioral issues without both executives in the room. Doing so will invite manipulation and politics.  Complaints of type 2 are both more rare and more complex. If one of your executives summons the courage to complain about the competency of one of their peers, then there is a good chance that either the complainer or the targeted executive has a major problem. If you receive a type 2 complaint, you will generally have one of two reactions: a) they will be telling you something that you already know or b) they’ll be telling you shocking news.  If they are telling you something that you already know, then the big news is that you have let the situation go too far. Whatever your reasons for attempting to rehabilitate the wayward executive, you have taken too long and now your organization has turned on the executive in question. You must resolve the situation quickly. Almost always, this means firing the executive. While I’ve seen executives improve their performance and skill sets, I’ve never seen one lose the support of the organization then regain it.  On the other hand, if the complaint is new news, then you must immediately stop the conversation and make clear to the complaining executive that you in no way agree with their assessment. You do not want to cripple the other executive before you re-evaluate their performance. You do not want the complaint to become a self-fulfilling prophecy. Once you’ve shut down the conversation, you must quickly re-assess the employee in question. If you find that they are doing an excellent job, then you must figure out the complaining executive’s motivations and resolve them. Do not let an accusation of this magnitude fester. If you find that the employee is doing a poor job, there will be time to go back and get the complaining employee’s input, but you should be on a track to remove the poor performer at that point.  Closing Thought As CEO, you must consider the systemic incentives that result from your words and actions. While it may feel good in the moment to be open, responsive and action oriented, be careful not to encourage all the wrong things.
If you want to build an important company, then at some point you have to scale. People in startup land often talk about the magic of how few people built the original Google or the original Facebook, but today’s Google employs 20,000 people and today’s Facebook employs over 1,500 people. So, if you want to do something that matters, then you are going to have to learn the black art of scaling a human organization.  Often board members give entrepreneurs two bits of advice regarding scale:  Get a mentor Find some “been there, done that” executives who already know how to scale These answers, while fine as far as they go have some important limitations. First, if you don’t know anything about scaling an organization, then it will be very difficult for you to evaluate people for that job. Imagine trying to find a killer engineer if you’d never written a single program. Second, many investor-board members don’t know anything about scaling a company either and can be suckers for people who have the experience but not the skills. If you’ve ever worked in a large organization, you know that there are plenty of people with experience running them, but possess none of the requisite skills to run them well.  The above advice is still good, but the right way to pick both the best mentors and best employees is by first learning the basics.  In this post, I will discuss the basics of scaling an organization. In doing so, I will lay out the fundamentals, but not go as far as writing a how-to guide. Hopefully, this will give you the context to apply the myriad of scaling techniques in the management literature appropriately. I will save for later posts more advanced topics such as:  Managing senior people Corporate politics and how to limit them Systemic incentives Incentive alignment Hiring function heads for functions that you’ve never done Re-organizing Software system implementation and adoption The Basic Idea—Give Ground Grudgingly When an organization grows in size, things that were previously easy become difficult. Specifically, the following things that cause no trouble when you are small become big challenges as you grow:  Communication Common knowledge Decision making In order to get a clear understanding of the problem, let’s start with the boundary condition. Imagine a company of one employee. That employee writes and tests all the code, does all the marketing and sales, and manages herself. She has complete knowledge of everything in the company, makes all the decisions, needn’t communicate with anyone and is totally aligned with herself. As the company grows, things will only get worse from here in each dimension.  Still, if the company doesn’t expand, then it will never be much of a company, so the challenge is to grow and degrade as slowly as possible.  There is a great analog to this concept in American Football. An offensive lineman’s job is to protect the quarterback from onrushing defensive linemen. If the offensive lineman attempts to do this by holding his ground, the defensive lineman will easily run around him and crush the quarterback. As a result, offensive linemen are taught to lose the battle slowly or to give ground grudgingly. They are taught to back up and allow the defensive lineman to advance, but just a little at a time.  When you scale an organization, you will also need to give ground grudgingly. Specialization, organizational structure, and process all complicate things quite a bit and implementing them will feel like you are moving away from common knowledge and quality communication. It is very much like the offensive lineman taking a step backwards. You will lose ground, but you will prevent your company from descending into chaos.  How to Do It At the point when adding people into the company feels like more work than the work that you can offload to the new employees, the defensive lineman has run around you and you probably need to start giving ground grudgingly. The first scale technique to implement is specialization.  Specialization In startups, everybody starts out as a jack-of-all-trades. For example, engineers write code, manage the build system, test the product, and, increasingly, deploy it and operate it. This works great in the beginning, because everybody knows everything and the need to communicate is minimized; there are no complicated hand-offs, because there is nobody to hand anything to. As the company grows, it becomes increasingly difficult to add new engineers, because the learning curve starts to get super steep. Getting a new engineer up-to-speed starts to become more difficult than doing the work yourself. At this point, you need to specialize.  By dedicating people and teams to such tasks as the build environment, the test environment, and operations, you will create some complexity—hand offs across groups, potentially conflicting agendas, and specialized rather than common knowledge. In order to mitigate these issues, you will need to consider other scale techniques like organizational design and process.  Organizational Design The first rule of organizational design is that all organizational designs are bad. With any design, you will optimize communication among some parts of the organization at the expense of other parts. For example, if you put product management in the engineering organization, you will optimize communication between product management and engineering at the expense of communication between product management and marketing. As a result, as soon as you roll out the new organization, people will find fault with it and they will be right.  Still, at some point, the monolithic design of one huge organization runs out of gas and you will need to split things into smaller sub-groups. At the most basic level, you’ll want to consider giving groups that you’ve specialized their own managers as they grow. You may want a QA manager for example. After that, things become more complex. Do client engineering and server engineering have their own groups or do you organize by use cases and include all technical components? When you get really big, you’ll need to decide whether to organize the entire company around functions (e.g. sales, marketing, product management, engineering) or around missions—self-contained business units that contain multiple functions.  Your goal is to choose the least of all evils. Think of the organizational design as the communications architecture for your company. If you want people to communicate, the best way to accomplish that is to make them report to the same manager. By contrast, the further away people are in the organizational chart, the less they will communicate. The organizational design is also the architecture for how the company communicates with the outside world. For example, you might want to organize your sales force by product to maximize communication with the relevant product groups and maximize the product competency of the sales force. If you do that, then you will do so at the expense of simplicity for customers who buy multiple products and will now have to deal with multiple sales people.  With this in mind, here are the basic steps to organizational design:  Figure out what needs to be communicated – Start by listing the most important knowledge and who needs to have it. For example, knowledge of the product architecture must be understood by engineering, QA, product management, marketing and sales. Figure out what needs to be decided – Consider the types of decisions that must get made on a frequent basis: feature selection, architectural decisions, how to resolve support issues, etc. How can you design the organization to put the maximum number of decisions under the domain of a designated manager? Prioritize the most important communication and decision paths – Is it more important for product managers to understand the product architecture or the market? Is it more important for engineers to understand the customer or the architecture? Keep in mind that these priorities will be based on today’s situation. If the situation changes, then you can re-organize. Decide who’s going to run each group – Notice that this is the fourth step not the first step. You want to optimize the organization for the people—for the people doing the work—not for the managers. Most large mistakes in organizational design come from putting the individual ambitions of the people at the top of the organization ahead of the communication paths for the people at the bottom of the organization. Making this step 4 will upset your managers, but they will get over it. Identify the paths that you did not optimize – As important as picking the communication paths that you will optimize is identifying the ones that you will not. Just because you de-prioritized them doesn’t mean that they are unimportant. If you ignore them entirely, they will surely come back to bite you. Build a plan for mitigating the issues identified in step 5 – Once you’ve identified the likely issues, you will know the processes that you will need to build to patch the impending cross-organizational challenges. These six steps should get you pretty far. When we examine advanced organizational design, we’ll also need to consider trade-offs such as speed vs. cost, how to roll out organizational changes, and how often one should re-organize.  Process The purpose of process is communication. If there are five people in your company, you don’t need process, because you can just talk to each other. You can hand off tasks with a perfect understanding of what’s expected, you pass important information from one person to another, and you can maintain high quality transactions with no bureaucratic overhead. With 4,000 people, communication becomes more difficult. Ad hoc, point-to-point communication no longer works. You need something more robust—a communication bus or, the conventional term for human communication buses, a process.  A process is a formal, well-structured communication vehicle. It can be a heavily engineered six-sigma process or it can be a well-structured regular meeting. The size of the process should be scaled up or down to meet the needs of the communication challenge that it facilitates.  When communication in an organization spans across organizational boundaries, processes will help ensure that a) the communication happens and b) that it happens with quality. If you are looking for the first process to implement in your company, consider the interview process. It usually runs across organizational boundaries (the hiring group, human resources—or wherever the recruiter lives, and supporting groups), involves people from outside the company (the candidate), and is critically important to the success of the company.  Who should design a process? The people who are already doing the work in an ad hoc manner. They know what needs to be communicated and to whom. Naturally, they will be the right group to formalize the existing process and make it scalable.  When should you start implementing processes? While that varies depending on your situation, keep in mind that it’s much easier to add new people to old processes than new processes to old people. Formalize what you are doing to make it easy to onboard new people.  There is much written about process design, so I won’t repeat that here. I have found Chapter 1: The Basics of Production from Andy Grove’s High Output Management to be particularly helpful. For new companies, here are a few things to keep in mind:  Focus on the output first – What should the process produce? In the case of the interview process, an outstanding employee. If that’s the goal, what’s the process to get there? Figure out how you’ll know if you are getting what you want at each step – Are you getting enough candidates? Are you getting the right candidates? Will your interview process find the right person for the job? Once you select the person, will they accept the job? Once they accept the job, will they become productive? Once they become productive, will they stay with your company? How will you measure each step? Engineer accountability into the system – Which organization and which individual is responsible for each step? What can you do to increase the visibility of their performance? Final Thought The process of scaling a company is not unlike the process of scaling a product. Different sizes of company impose different requirements on the company’s architecture. If you address those requirements too early, your company will seem heavy and sluggish. If you address those requirements too late, your company may melt down under the pressure. Be mindful of your company’s true growth rate as you add architectural components. It’s good to anticipate growth, but it’s bad to over-anticipate growth.
Recently, I was reminded of one of the more annoying things that happens to the CEO when things go horribly wrong in your business. After a terrible event such as a lay off or a whiffed quarter or getting stomped by the competition in a critical deal, you run the scenarios of doom through your mind thousands of times. You retrace every terrible small decision that you made along the way. After doing so thousands of times, you sometimes find a difficult, low-probability way to get the company out of the mess.  At that point, it’s sort of like walking into the OK Corral with only one bullet in your gun—you know that you have to hit the target with that one bullet. So you summon all your energy to rally your troops and intensely focus them on that one achievable goal. You draw on every ounce of positivity in your soul to get the team behind the plan. Once you’ve finally generated enough momentum to create some hope that you might survive, the annoying thing happens. In a critical meeting with many of your best and most important employees, an influential person (perhaps an executive or a board member) raises his hand, proceeds to recount all of the company’s past mistakes and predicts that the company will fail. He doesn’t say anything new or anything interesting; he just recounts all of the company’s extremely well known problems. Gee, thanks.  To those predictors of doom, I relay what an old friend once passed on to me. At a certain point in the process, no credit will be given for predicting rain. The only credit will be for helping to build an ark.
As former founder and CEO of Loudcloud, one of the original cloud computing companies, I am considered somewhat of a domain expert in all things “cloud.” Combine that with cloud being one of the hottest areas of new development and the most overloaded term in technology (well, maybe “real time” is more overloaded, not sure) and I have probably seen more new cloud companies than any other variety. So, I thought that our first investment in the sector might be worth discussing.  As with previous major architectural shifts in computing infrastructure, when moving from traditional on-premise computing to cloud computing, certain things translate well, some don’t transfer at all, and most things are just different. When the computing architecture moved from Mainframe to Client/Server, hierarchical databases didn’t move with it. Due to radically cheaper computing cycles and storage, the database market moved to the much more easily programmable and more resource intensive relational database model. Similarly, the first attempts to build applications in the cloud from companies such as Corio simply fork-lifted the leading on premise software and moved it into the hosted environment. While this sounded like a good idea to many VCs at the time, it turned out to miss important details and advantages of the cloud.  The fact that these missing details mattered was definitively proven when Salesforce.com freshly architected their product for the cloud. This new sales force automation product boasted multi-tenancy, a native web interface, and an underlying operational environment designed for the modern era. Based on this design, Salesforce.com radically raised the bar for product and financial performance in the software industry. Their breakthrough architecture enabled them to run engineering at half the percentage of revenue of both their online and offline competitors. Salesforce.com took their winnings and invested in sales and marketing at levels never seen before in the industry. In the meanwhile, their multi-tenant approach enabled them to sidestep an issue that had dogged on-premise enterprise software for years—supporting multiple product versions. By hosting all of their customers on a single version, Salesforce avoided huge investments in multiple version support, migration, and upgrades then used those winnings to deliver exceptionally fast product innovation. By combining their innovation advantage with their aggressive sales and marketing efforts, Salesforce.com took the market and remains the most successful cloud application in the world 11 years later.  We recently made our first investment in the cloud in a cloud application company called Okta (which means cloud cover). Our investment thesis starts, as always, with the entrepreneur. The founding CEO, Todd McKinnon, previously ran Salesforce.com’s engineering organization from the early days (8 engineers) to large scale. He is the ultimate domain expert on building cloud applications. He may also be the most astute engineering manager that I have ever worked with. A mutual friend of ours, Hosain Rahman (CEO of Jawbone) refers to Todd as “the engineering management Ninja”). I must agree that Todd’s skill, like a Ninja’s, seems to give him some kind of super powers.  Okta’s initial product aims to solve the Cloud identity problem. I like the problem, because it is seriously different in the cloud than it is on-premise and, for new companies, different equals good. How is identity different in the cloud? For starters, problems that were solved long ago on premise such as automatically getting access to your mail, files, and printers remain issues in the cloud. Next, problems that were intractable in the on-premise world such as meta-directory—the technology that integrates disparate identity sources—become manageable in the cloud. Every system that a meta-directory integrates must be upgraded every year or two. When vendors put out these upgrades, things change. As a result of these changes, on-premise meta-directories break and must be re-integrated. For customers, this means paying for on-going, permanent integration consulting or punting on the meta-directory problem. Like a bunch of overly nervous football coaches, almost every customer in the on-premise world chooses to punt. In the cloud, the maker of a properly architected meta-directory can perform the upgrades on behalf of all of their customers simultaneously.  In order to understand the size of the market, it’s important to realize that in the on-premise world a variety of factors lead to an artificial separation between the identity market and the desktop and systems management markets.  The goal of an IT organization ought to be to optimize employee productivity. Nonetheless, every leading on-premise desktop and systems management product is designed to optimize machine productivity. Specifically, the primary objects in these systems are machines. People, on the other hand, are peripheral, loosely related attributes. This architecture appears to be upside down. In the on-premise world, it is necessarily upside down due to, among other things, the shaky foundation for people—the broken meta-directory.  In the cloud, you can solve the meta-directory problem and other related problems then unite the identity and systems management markets. As a result, I really like the market, because the cloud identity market will likely become the cloud management market. Given that those current markets combined are between $10B and $20B (depending on what you count), the resulting market will be extremely large.  However, this rough analysis understates the total size of the Okta opportunity, because Software as a Service (SaaS) will greatly expand the number of companies who can afford to deploy enterprise software applications. In the old world, large-scale enterprise software systems were extremely expensive to build and distribute. As a result, they were also very expensive to buy (small companies didn’t buy and deploy Siebel). With the advent of SaaS, smaller companies are adopting software applications in large numbers—the average Okta customer has less than 2,000 employees and already a few software systems that require integration.  We could not be more excited to be going after a giant market with the very best team in the field.
My single biggest personal improvement as CEO occurred on the day when I stopped being too positive.  As a young CEO, I felt the pressure—the pressure of employees depending on me, the pressure of not really knowing what I was doing, the pressure of being responsible for tens of millions of dollars of other people’s money. As a consequence of this pressure, I took losses extremely hard. If we failed to win a customer or slipped a date or shipped a product that wasn’t quite right, it weighed heavily on me. I thought that I would make the problem worse by transferring that burden to my employees. Instead, I thought I should project a positive, sunny demeanor and rally the unburdened troops to victory. I was completely wrong.  I realized my error during a conversation with my brother in-law, Cartheu. At the time, Cartheu worked for AT&T as a telephone repairman (he is one of those guys that climbs the poles). I had just met a senior executive at AT&T who I’ll call Fred Johnson, and I was excited to find out if Cartheu knew him. When I inquired, Cartheu said, “Yeah, I know Fred. He comes by about once a quarter to blow a little sunshine up my ass.” At that moment, I knew then that I’d been screwing up my company by being too positive.  In my mind, I was keeping everyone in high spirits by accentuating the positive and ignoring the negative. But my team saw that reality was more nuanced than I was describing it. And not only did they see for themselves that the world wasn’t as rosy as I was describing it, they still had to listen to me blowing sunshine up their butts at every company meeting.  How did I make such a big mistake and why was it such a big mistake?  The Positivity Delusion As the highest-ranking person in the company, I thought that I would be best able to handle bad news. Interestingly, the opposite was actually true: nobody took bad news harder than me. Engineers easily brushed off things that kept me awake all night. After all, I was the founding CEO. I was the one married to the company. If things went horribly wrong, they could walk away, but I could not. As a consequence, the employees handled losses much better than me.  Even more stupidly, I thought that it was my job and my job only to worry about the company’s problems. Had I been thinking more clearly, I would have realized that it didn’t make sense for me to be the only one to worry about, for example, the product not being quite right—because I wasn’t writing the code that would fix it.  A much better idea would be to give the problem to the people who could not only fix it, but would be personally excited and motivated to do so. Another example: if we lost a big prospect, the whole organization needed to understand why so that we could together fix the things that were broken in our products, marketing, and sales process. If I insisted on keeping the burdens of setbacks to myself, there was no way to jump start that process.  Why it’s imperative to tell it like it is There are three key reasons why being transparent about your company’s problems makes sense:  1. Trust Without trust, communication breaks. More specifically:  In any human interaction, the required amount of communication is inversely proportional to the level of trust Consider the following. If I trust you completely, then I require no explanation or communication of your actions whatsoever, because I know that whatever you are doing is in my best interests. On the other hand, if I don’t trust you at all, then no amount of talking, explaining or reasoning will have any effect on me, because I do not trust that you are telling me the truth.  In a company context, this is a critical point. As a company grows, communication becomes its biggest challenge. If the employees fundamentally trust the CEO, then communication will be vastly more efficient than if they don’t. Telling things as they are is a critical part of building this trust. A CEO’s ability to build this trust over time is often the difference between companies that execute well and companies that are chaotic.  2. The more brains working on the hard problems, the better In order to build a great technology company, you have to hire lots of incredibly smart people. It’s a total waste to have lots of big brains, but not let them work on your biggest problems. A brain, no matter how big, cannot solve a problem that it doesn’t know about. As the open source community would explain it, “given enough eyeballs, all bugs are shallow.”  3. A good culture is like the old RIP routing protocol (bad news travels fast, good news travels slow) If you investigate companies which have failed, you will find many employees who knew about the fatal issues long before those issues killed the company. If the employees knew about the deadly problems, why didn’t they say something?  Too often the answer is that the company culture discouraged the spread of bad news, so the knowledge lay dormant until it was too late to act.  A healthy company culture encourages people to share bad news. A company that discusses its problems freely and openly can quickly solve them. A company that covers up its problems frustrates everyone involved. The resulting action item for CEOs: build a culture which rewards—not punishes—people for getting problems into the open where they can be solved.  As a corollary, beware of management maxims that stop information from flowing freely in your company. For example, consider the old management standard: “don’t bring me a problem without bringing me a solution.” What if the employee cannot solve an important problem? For example, what if an engineer identifies a serious flaw in the way the product is being marketed? Do you really want him to bury that information? Management truisms like these may be good for employees to aspire to in the abstract, but they can also be the enemy of free-flowing information—some of which may be critical for the health of the company.  Final thought If you run a company, you will experience overwhelming psychological pressure to be overly positive. Stand up to the pressure, face your fear, and tell it like it is.
Today we are extremely excited to announce that we are investing in Foursquare, a service that mixes social, locative, and gaming elements to encourage people to explore cities in which they live.  Here are the three reasons we invested.  1. A great Founder/CEO: Dennis Crowley We prefer founding CEOs. In particular, we think the keeper of the product vision should run the company whenever possible because the toughest and most important decisions in technology companies are always about product strategy.  The only thing better than the CEO being the keeper of the vision is the CEO being the creator of the vision. In Foursquare’s case, Dennis not only created the vision for the company, but for the entire product category. Beyond that, he is very clearly the thought leader in the market. This is not at all surprising as he has been working on the problem for a decade and has highly refined his thinking through that period.  As importantly, Dennis embodies the kind of leadership that I described in Notes on Leadership. He’s the kind of leader that great technical minds will be excited to follow: visionary, righteous, and competent. I am really excited to work with Dennis to help him on his path from being a great leader to a great Chief Executive of an incredibly important company.  2. A killer product When you look at the numbers, you’ll see that Foursquare is growing faster than Twitter did at this stage. In particular, their growth has been explosive over the past few months — they just hit 1 million users in April and now they’re approaching 1.8 million, adding around 15,000 users per day. It’s easy to see that people absolutely love the product. Less obvious to the competitors and pundits are the reasons why people love the product so much. I often hear people attribute Foursquare’s success entirely to check-ins or other easy-to-understand product features. It reminds me of the early days of Zynga when people thought the secret sauce behind Mafia Wars and Farmville were that those games were web-based.  It turns out Zynga games are wildly successful because Zynga has mastered the art of connecting friends via games—and they work incredibly hard behind the scenes to deliver what at face value looks very easy. How many times have you heard someone say, “I could have built Farmville in a weekend”?  Foursquare is very similar in that a lot of hard work behind the scenes goes into delivering a product that users love. Dennis and team have identified over a dozen different dimensions of the Foursquare product that must interact with each other in precisely optimal ways to achieve user delight. Years and years of research and sweat equity went into cracking the code, and the results are magical.  3. A gigantic market At a macro level, over 4.6B people have mobile phones and there are 1.7B people on the Internet. Already, over 200M people worldwide have smart phones and that number is headed north fast. Foursquare might not win the entire smart phone market (some people don’t even like to leave their house), but it will capture a huge portion of it because it’s incredibly fun and addicting.  As importantly, we are very excited about Foursquare’s ability to make money in a way where all parties win: users, merchants, venue owners, brand advertisers, and more. In fact, users have been so excited about the product that they’ve actually been signing up local businesses to run promotions for Foursquare’s mayors and active users. This natural enthusiasm is happening even before Foursquare has added specific product features to help businesses run campaigns. As a result, major brands such as The Wall Street Journal, The New York Times, Zagat, Bravo TV, Starbucks, C-SPAN, Marc Jacobs and over 10,000 businesses are currently working with Foursquare to build customer loyalty and drive traffic. Not many companies have their users turn into their sales force, and it’s definitely a good sign that this is happening around Foursquare.  We are excited to be on this journey with our good friends at Foursquare.
Often when super successful entrepreneurs found their second company, they suffer from a dangerous condition. In fact, the more successful the original startup, the more likely it is that the entrepreneur develops an acute case of Second Startup Syndrome.  Second Startup Syndrome occurs when an entrepreneur wants to pick up in her second startup right where her first startup left off. In the beginning, the focus of a startup must be on building a great product and finding product market fit. During this period, there is no glamour and very little breadth—the company must be narrow. Serial entrepreneurs who suffer from Second Startup Syndrome want to skip through the narrow early steps and move quickly to more exciting topics such as long-term strategy, sales and marketing, company positioning, company culture, and more. Unfortunately, when you build a house, it’s usually a very bad idea to start with the roof.  Some telling symptoms of Second Startup Syndrome:  The company assumes that the first product will succeed and spends more time figuring out business models and monetization strategies than developing the core product idea. The company becomes obsessed with the things that went wrong in their last company and focuses entirely on how to rid the new company of these mistakes. If the previous company was successful, the entrepreneurs often ignore what went right and focus on what went wrong. The company glosses over important details assuming that what worked the first time will automagically work the second time. Perhaps the greatest sign of Second Startup Syndrome is a lack of anxiety. Building a new technology company is really, really hard. In order to do it successfully, you have to sweat the details, worry about all the things that might go wrong, and suffer more than a few sleepless nights (either from working through the night or just worrying through the night). All of those things that you go through—a boiling stomach, lack of sleep, waves of paranoia, and vivid visions of your own demise—turn out to be good things.
No position in a company is more important than the CEO and, as a result, no job gets more scrutiny. Sadly, little of this analysis benefits CEOs as most of the discussions happen behind their backs. This post is a step in the opposite direction. By describing how Andreessen Horowitz evaluates CEOs, I am at the same time describing what I think the job of the CEO is. Here are the key questions we ask:  Does the CEO know what to do? Can the CEO get the company to do what she knows? Did the CEO achieve the desired results against an appropriate set of objectives? 1. Does the CEO know what to do? One should interpret this question as broadly as possible. Does the CEO know what to do in all matters all of the time? This includes matters of personnel, matters of financing, matters of product strategy, matters of goal sizing, matters of marketing. At a macro level, does the CEO set the right strategy for the company and know its implications in every detail of the company?  I evaluate two distinct facets of knowing what to do:  Strategy—At Andreessen Horowitz, we like to say that in good companies, the story and the strategy are the same thing. As a result, the proper output of all the strategic work is the story. Decision making—At the detailed level, the output of knowing what to do is the speed and quality of the CEO’s decisions. The Strategy and the Story The CEO must set the context that every employee operates within. This context gives meaning to the specific work that people do, aligns interests, enables decision-making and provides motivation. Well-structured goals and objectives contribute to the context, but they do not provide the whole story. More to the point, goals and objectives are not the story.  The story of the company goes beyond quarterly or annual goals and gets to the hardcore question of why? Why should I join this company? Why should I be excited to work here? Why should I buy your product? Why should I invest in the company? Why is the world better off as a result of this company’s existence?  When a company clearly articulates its story, the context for everyone—employees, partners, customers, investors, and the press—becomes clear:  When a company fails to tell its story, you hear phrases like:  “These reporters don’t get it.” “Who is responsible for the strategy in this company?” “We have great technology, but need marketing help.” The CEO doesn’t have to be the creator of the vision. Nor does she have to be the creator of the story. But she must be the keeper of the vision and the story. As such, the CEO ensures that the company story is clear and compelling.  The story is not the mission statement; the story does not have to be succinct. It is the story. Companies can take as long as they need to tell it, but they must tell it and it must be compelling. A company without a story is a usually a company without a strategy.  Want to see a great company story? Read Jeff Bezos’ 3-page letter he wrote to shareholders in 1997. In telling Amazon’s story in this extended from—not as mission statement, not as a tagline—Jeff got all the people who mattered on the same page about what Amazon was about.  Decision Making Some employees make products, some make sales; the CEO makes decisions. Therefore, a CEO can most accurately be measured by the speed and quality of those decisions. Great decisions come from CEOs who display an elite combination of intelligence, logic, and courage.  Courage is particularly important, because every decision that a CEO makes is based on incomplete information. In fact, at the time of the decision, the CEO will generally have less than 10% of the information typically present in the ensuing Harvard Business School case study. As a result, the CEO must have the courage to bet the company on a direction even though she does not know if the direction is right. The most difficult decisions (and often the most important) are difficult precisely because they will be deeply unpopular with the CEO’s most important constituencies (employees, investors, and customers).  In my personal experience, the best decision that I made in my career—the decision to sell the Loudcloud business to EDS and become Opsware the software company—would have lost by landslide had I put it to vote with my employees, my investors, or my customers.  As CEO, there is never enough time to gather all information needed to make a decision. The CEO must make hundreds of decisions big and small in the course of a typical week. The CEO cannot simply stop all other activities to gather comprehensive data and do exhaustive analysis make that single decision. Knowing this, the CEO must be continuously and systematically gathering knowledge in their day-to-day activities so that they will have as much information as possible when the decision point presents itself.  In order to prepare to make any decision, the CEO must systematically acquire the knowledge of everything that might impact any decision that she might make. Questions such as:  What are the competitors likely to do? What’s possible technically and in what time frame? What are the true capabilities of the organization and how can you maximize them? How much financial risk does this imply? What will the issues be given your current product architecture? Will the employees be energized or despondent about this promotion? Great CEOs build exceptional strategies for gathering the required information continuously. They embed their quest for intelligence into all of their daily actions from staff meetings to customer meetings to 1:1s. Winning strategies are built on comprehensive knowledge gathered in every interaction the CEO has with an employee, a customer, a partner, an investor, and so on.  2. Can the CEO get the company to do what she knows? If the CEO paints a compelling vision and makes fast, high quality decisions, can she then get the company to execute on her vision and decisions? The first ingredient in being able to do this is leadership as I outlined in a previous post Notes on Leadership.  In addition, executing well requires a broad set of operational skills. The larger the organization, the more elaborate the requisite skill set.  In order for a company to execute a broad set of decisions and initiatives, it must:  Have the capacity to do so – In other words, the company must contain the necessary talent in the right positions to execute the strategy. Be a place where every employees can get things accomplished – the employees must be motivated, communication must be strong, the amount of common knowledge must be vast, and the context must be clear. Is the CEO building a world-class team? The CEO is responsible for the executive team plus the fundamental interview and hiring processes for all employees. She must make sure that the company sources the best candidates and that the screening processes yield the candidates with the right combination of talent and skills. Ensuring the quality of the team is a core part of running the company. Great CEOs constantly assess whether or not they are building the best team.  The output of this capability is the quality of the team. It’s important to note that team quality is tightly tied to the specific needs of the company in the challenges that it faces at the point in time that it faces them. As a result, it’s quite possible that the executive team changes several times, but the team a) is high quality the entire way and b) there is no attrition problem.  Is it is easy for employees to contribute to the mission? The second part of the evaluation determines whether or not the CEO can effectively run the company. To test this, I like to ask this question: “how easy is it for any given individual contributor to get their job done?”  In well-run organizations, people can focus on their work (as opposed to politics and bureaucratic procedures) and have confidence that if they get their work done, good things will happen for both the company and them personally. By contrast, in a poor organization, people spend much of their time fighting organizational boundaries and broken processes.  While quite easy to describe, building a well-run organization requires a high level of skill. The skills required range from organizational design to performance management. They involve the incentive structure and the communication architecture that drives and enables every individual employee. When a CEO “fails to scale,” it’s usually along this dimension. In practice, very few CEOs get an “A” on this particular test.  Netflix’s CEO Reed Hastings put great effort into designing a system that enables employees to be maximally effective. His presentation on this design is called Reference Guide on our Freedom and Responsibility Culture. It walks through what Netflix values in their employees, how they screen for those values during the interview process, how they reinforce those values, and how they scale this system as the number of employees grows.  3. Results against objectives When measuring results against objectives, start by making sure the objectives are correct. CEOs who excel at board management can “succeed” by setting objectives artificially low. Great CEOs who fail to pay attention to board management can “fail” by setting objectives too high. Early in a company’s development, objectives can be particularly misleading as nobody really knows the true size of the opportunity. Therefore, the first task in accurately measuring results is setting objectives correctly.  We also try to keep in mind that the size and nature of the opportunity varies quite a bit across companies. Hoping that VMWare can be as capital light as SolarWinds or trying to get Yelp to grow as fast as Twitter doesn’t make sense and can be quite destructive.  CEOs should be evaluated against their company’s opportunity – not somebody else’s company. Let me share a funny story which illustrates a CEO really owning delivering against results. This story is from Robin Li, CEO of Baidu. He shares that on the day of Baidu’s IPO—usually one of an entrepreneur’s most exhilirating days of his entire life—he sat at his desk terrified. Why? Listen to how Robin owned delivering results:  In 2004, we raised our last round of VC money led by Draper Fisher Jurvetson…and Google, one of our great colleagues. Then a year later, in 2005, the company went public. The ideal price was $27 [the stock's initial offer price] and it closed on the first day at $122. It was great with us for many of the Baidu employees and for all of the Baidu investors. It was a very miserable thing for me because when I decided to take the company public, I was only prepared to deliver financial results that match the price of $27 or maybe a little higher, $30, $40. But I was really shocked to see that the price went to $122 on the first day. So that meant I needed to deliver real results that matches an expectation much, much higher than what I had prepared to do. But in any case, I thought I had no choice. So I put my head down and focused on operation, focused on technology, focused on the user’s experience, and I delivered. Once we’ve taken all of this into account, we see that black box results are a lagging indicator. And as they say in the mutual fund prospectuses, “past performance is no guarantee of future performance.” The white box CEO evaluation criteria—”does the CEO know what to do?” and “can the CEO get the company to do it?”—will do a much better job of predicting the future.  Closing Thought CEO evaluation need not be a byzantine, unstated art. All people, including CEOs, will perform better on a test if they know the questions ahead of time.
When I first became a manager, I had mixed feelings about training. Logically, training for hi-tech companies made sense, but my personal experience with training programs at the companies where I had worked was underwhelming. The courses were taught by outside firms who didn’t really understand our business and were teaching things that weren’t relevant. Then I read chapter 16 of Andy Grove’s management classic High Output Management entitled Why Training is The Boss’s Job and it changed my career.  Most dramatically, when I was Director of Product Management at Netscape, I was feeling frustrated by how little value most product managers added to the business. Based on Andy’s guidance, I wrote a short document called Good Product Manager/Bad Product Manager which I used to train the team on my basic expectations (and I include at the end of this post). I was shocked by what happened next. The performance of my team instantly improved. Product managers that I previously thought were hopeless became effective. Pretty soon, I was managing the highest performing team in the company. Based on this experience, after starting Loudcloud, I heavily invested in training. I credit that investment with much of our eventual success. And the whole thing started with a simple decision to train my people and an even simpler training document. So, I will now pay forward my debt to Andy Grove and explain why, what, and how you should do the same in your company.  Why you should train your people Almost everyone who builds a technology company knows that people are the most important asset. Properly run start-ups place a great deal of emphasis on recruiting and the interview process in order to build their talent base. Unfortunately, often the investment in people stops there. There are four core reasons why it shouldn’t:  1. Productivity Often I see startups keep careful statistics of how many candidates they’ve screened, how many have made it to the full interview process and how many people they’ve hired. All of these statistics are interesting, but the most important statistic is missing: how many fully productive employees have they added? By failing to measure progress towards the actual goal, they lose sight of the value of training. If they measured productivity, they might be horrified to find that all those investments in recruiting, hiring, and integration were going to waste. Even if they were made aware of low productivity among new employees, most CEOs think that they don’t have time to invest in training. Andy Grove does the math and shows that the opposite is true:  Training is, quite simply, one of the highest-leverage activities a manger can perform. Consider for a moment the possibility of your putting on a series of four lectures for members of your department. Let’s count on three hours preparation for each hour of course time—twelve hours of work in total. Say that you have ten students in your class. Next year they will work a total of about twenty thousand hours for your organization. If your training efforts result in a 1 percent improvement in you subordinates’ performance, you company will gain the equivalent of two hundred hours of work as the result of the expenditure of your twelve hours.  2. Performance Management When people interview managers, they often like to ask: have you fired anyone? Or how many people have you fired? Or how would you go about firing someone? These are all fine questions, but often the right question is the one that isn’t asked: When you fired the person, how did you know with certainty that the employee both understood the expectations of the job and were missing them? The best answer is that the manager clearly set expectations when she trained the employee for the job. If you don’t train your people, you establish no basis for performance management. As a result, performance management in your company will be sloppy and inconsistent.  3. Product Quality Often founders start companies with visions of elegant, beautiful product architectures that will solve so many of the nasty issues that they were forced to deal with in their previous jobs. Then, as their company becomes successful, they find that their beautiful product architecture has turned into a Frankenstein. How does this happen? As success drives the need to hire new engineers at a rapid rate, companies neglect to train the new engineers properly. As the engineers are assigned tasks, they figure out how to complete them as best they can. Often this means replicating existing facilities in the architecture, which lead to inconsistencies in the user experience, performance problems, and a general mess. And you thought training was expensive.  4. Employee Retention During a time of particularly high attrition at Netscape, I decided to read all of the exit interviews for the entire company to better understand why people quit hi-tech companies. After putting economics, aside, I found that there were two primary reasons why people quit:  They hated their manager – generally the employees were appalled by the lack of guidance, career development and feedback they were receiving. They weren’t learning anything – the company wasn’t investing in the employees. An outstanding training program can address both issues head on.  What Should You Do First? The best place to start is with the topic that is most relevant to your employees: the knowledge and skill that they need to do their job. I call this functional training. Functional training can be as simple as training a new employee on your expectations for them (see Good Product Manager/Bad Product Manager) and as complex as a multi-week engineering boot camp to bring new recruits completely up-to-speed on all of the historical architectural nuances of your product. The training courses should be tailored to the specific job. If you attempt the more complex-style course, be sure to enlist the best experts on the team as well as the manager. As a happy side effect, this type of effort will do more to build a powerful, positive company culture than 100 culture-building strategic offsite meetings.  The other essential component of a company’s training program is management training. Management training is the best place to start setting expectations for your management team. Do you expect them to hold regular 1:1s with their employees? Do you expect them to give performance feedback? Do you expect them to train their people? Do you expect them to agree upon objectives with their team? If you do, then you’d better tell them, because the management state-of-the-art in technology companies is extremely poor. Once you’ve set expectations, the next set of management courses has already been defined; they are the courses that teach your managers how to do the things you expect (how to write a performance review, how to conduct a 1:1, . . .)  Other interesting topics — Once you have management training and functional training in place, there are other opportunities as well. One of the great things about building a tech company are the amazing people that you can hire. Take your best people and encourage them to share their most developed skills. Training in such topics as negotiating, interviewing, finance, etc. will enhance your company’s competency in those areas as well as improving employee morale. Teaching can also become a badge of honor for employees who achieve an elite level of competence.  Some Keys for Implementing Your Training Program Now that we understand the value of the training and what to train on, how do we get our organization to do what we want? The first thing to recognize is that no start-up has time to do optional things. Therefore, training must be mandatory. The first two types of training (functional and management) can be easily enforced as follows:  Enforce functional training by withholding new employee requisitions – As Andy Grove writes, there are only two ways for a manager to improve the output of an employee: motivation and training. Therefore, training should be the most basic requirement for all managers in your organization. An effective way to enforce this requirement is by withholding new employee requisitions from managers until they’ve developed a training program for the TBH. Enforce management training by teaching it yourself – Managing the company is the CEO’s job. While you won’t have time to teach all of the management courses yourself, you should teach the course on management expectations, because they are, after all, your expectations. Make it an honor by selecting the best managers on your team to teach the other courses. And make that mandatory too. Ironically, the biggest inhibitor to putting a training program in place is the perception that it will take too much time. Keep in mind, that there is no investment that you can make that will do more to improve productivity in your company. Therefore, being too busy to train is the moral equivalent of being too hungry to eat. Furthermore, it’s not that hard to create basic training courses. I include Good Product Manager/Bad Product Manager to illustrate. Enjoy.  Good Product Manager, Bad Product Manager (example training document) Warning: This document was written 15 years ago and is probably not relevant for today’s product managers. I present it here merely as an example of a useful training document.
The other day I was talking to a couple of friends of mine, one a VC and the other a CEO. During the meeting, we were discussing one of the executives at the CEO’s company. The executive in question performs exceptionally, but lacks experience managing at larger scale. My friend the VC innocently advised the CEO to carefully consider whether the executive would scale to meet the company’s needs in the future. I responded swiftly, aggressively, and loudly saying “that’s a horrible idea and makes no sense at all.” Both of my friends startled at my outburst. Normally, I am disciplined enough to refrain from letting my feelings pass straight through my mouth without stopping at my brain for review. Why the outburst? Here is my answer.  As CEO, you must constantly evaluate all of the members of your team. However, evaluating people against the future needs of the company based on a theoretical view of how they will perform is counter-productive for the following reasons:  Managing at scale is a learned skill rather than a natural ability—Nobody comes out of the womb knowing how to manage a thousand people. Everybody learns at some point. It’s nearly impossible to make the judgment in advance—How do you tell in advance if an executive can scale? Was it obvious that Bill Gates would learn how to scale when he was a Harvard drop out? How do you go about making that decision? The act of judging people in advance will retard their development—If you make a judgment that someone is incapable of doing something such as running a larger organization, then will it make sense to teach them those skills or even point out the anticipated deficiencies? Probably not. You’ve already decided that they can’t do it. Hiring scalable execs too early is a horrible mistake—There is no such thing as a great executive. There is only a great executive for a specific company at a specific point in time. Mark Zuckerberg is a phenomenal CEO for Facebook. He would not be a good CEO for HP. Similarly, Mark Hurd does a terrific job at HP, but he would not be the right person to manage Facebook. If you judge your team in advance and have a high sense of urgency, you will bring in executives that can manage at high scale in advance of needing them. Unfortunately, you will probably ignore their ability to do the job for the next 12 months, which is the only relevant measure. As a result, you will swap out good executives for worse ones. You still have to make the judgment at the actual point in time when you hit the higher level of scale—Even if you avoid the trap of hiring a scalable executive too early or retarding the new executive’s development, you still haven’t actually bought yourself anything by making the pre-judgment. Regardless of what you decided at point in time A, you still have to evaluate the situation with far better data at point in time B. It’s no way to live your life or run an organization—Deciding (with woefully incomplete data) that someone who works their butt off, does a terrific job, and loyally contributes to your mission won’t be with you three years from now takes you to a dark place. It’s a place of information hiding, dishonesty, and stilted communication. It’s a place where prejudice substitutes for judgment. It’s a place where judgment replaces teaching. It’s a place where teamwork becomes internal warfare. Don’t go there. So, if you don’t prejudge people’s ability to scale, how do you make the judgment? You should evaluate your team at least once a quarter on all dimensions. Two keys can help you avoid the scale anticipation trap:  Don’t separate scale from the rest of the evaluation—The relevant question isn’t whether an executive can scale; it’s whether the executive can do the job at the current scale. You should evaluate holistically and this will prevent you from separating out scale, which often leads to a prediction of future performance. Make the judgment on a relative rather than an absolute scale—Asking yourself whether or not an executive is great can be extremely difficult to answer. A better question is: For this company at this exact point in time, does there exist an executive who I can hire who will be better? If my biggest competitor hires that person, how will that impact our ability to win? In summary, predicting whether or not an executive can scale corrupts your ability to manage, is unfair, and doesn’t work.
When my partner Marc wrote his post describing our firm, the most controversial component of our investment strategy was our preference for founding CEOs. The conventional wisdom says a startup CEO should make way for a professional CEO once the company has achieved product-market fit. In this post, I describe why we prefer to fund companies whose founder will run the company as its CEO.  The macro reason: that’s the way most of the great technology companies have been built At Andreessen Horowitz, our primary goal is to invest in the great technology franchises. As we looked at the history of great technology companies, we discovered that founders ran an overwhelming majority of them for a very long time, including:  Acer—Stan Shih Adobe—John Warnock Amazon – Jeff Bezos AMD—Jerry Sanders III Apple – Steve Jobs DEC—Ken Olsen Dell—Michael Dell EA—Trip Hawkins EDS —Ross Perot Hewlett-Packard—Dave Packard IBM—Thomas Watson, Sr. (*) Intel—Andy Grove (*) Intuit—Scott Cook Microsoft —Bill Gates Motorola—Paul Galvin nVidia—Jen-Hsun Huang Oracle—Larry Ellison Peoplesoft—Dave Duffield Salesforce.com—Marc Benioff Seagate—Al Shugart Siebel—Tom Siebel Sony—Akio Morita Sun—Scott McNeely VMware—Diane Greene (*) While not technically cofounders, Andy Grove and Thomas Watson, Sr. were the driving force behind Intel and IBM, respectively.  Andy Grove was Intel’s third employee (after the two cofounders Robert Noyce and Gordon E. Moore).  Thomas Watson, Sr. joined as a General Manager of the Computing Tabulating Recording Company, but renamed the company International Business Machines and turned it into the IBM we recognize today.  In addition, founders run today’s most promising new companies such as Zynga (Mark Pincus), Facebook (Mark Zuckerberg), Twitter (Ev Williams), Workday (Dave Duffield and Aneel Bhusri) and Fusion-io (David Flynn).  Two more quick data points before I move on to explain why this happens.  First, the University of Pennsylvania’s Wharton School of Business just published an analysis of recent exits for high technology companies such as BlackBoard, BladeLogic, Concur, Danger, Liveperson, LogMeIn, and Netsuite. Looking across these nearly 50 companies, the study finds that founding CEOs consistently beat the professional CEOs on a broad range of metrics ranging from capital efficiency (amount of funding raised), time to exit, exit valuations, and return on investment.  Second, for folks keeping score at home, this phenomenon appears to extend beyond high-technology companies. Felix Salmon, for instance, points out that Fortune’s editorial staff considered twelve other candidates including Warren Buffett, Carlos Slim, and Martha Stewart before naming Steve Jobs the best CEO of the decade in November 2009. Salmon points out that “not a single one of the 12 [candidates] is a CEO who was hired to run a company by its board of directors.”  There are certainly exceptions to this rule, most notably Google and Cisco (I will address both exceptions later in this post), but the evidence is one-sided and overwhelming.  The underlying reasons From a pattern matching perspective, it makes sense that we’d prefer founding CEOs, but as I said in an earlier post, pattern matching is not knowledge. So, why are great technology companies so often run by their founders? And why do professional CEOs sometimes succeed?  The innovation business The technology business is fundamentally the innovation business. Etymologically, the word technology means “a better way of doing things.” As a result, innovation is the core competency for technology companies. Technology companies are born because they create a better way of doing things. Eventually, someone else will come up with a better way. Therefore, if a technology company ceases to innovate, it will die.  These innovations are product cycles. Professional CEOs are effective at maximizing, but not finding, product cycles. Conversely, founding CEOs are excellent at finding, but not maximizing, product cycles. Our experience shows—and the data supports—that teaching a founding CEO how to maximize the product cycle is easier than teaching the professional CEO how to find the new product cycle.  The reason is that innovation is the most difficult core competency to build in any business. Innovation is almost insane by definition: most people view any truly innovative idea as stupid, because if it was a good idea, somebody would have already done it. So, the innovator is guaranteed to have more natural initial detractors than followers.  Steve Jobs’ return to Apple provides an excellent example. At the time Jobs regained control of Apple, the conventional wisdom said that Apple was getting killed by “PC Economics” and had to separate the operating system from the hardware. Specifically, Apple couldn’t compete with Microsoft unless it became more horizontal and let commodity hardware manufactures compete while Apple focused exclusively on the OS. The professional CEO who preceded Jobs (Gil Amelio) took the conventional wisdom to heart. He set out to create an ecosystem of Mac cloners who would provide the commodity hardware complement to Apple’s famous OS.  When Jobs came in and reversed those decisions, most industry analysts thought Jobs was insane. Jobs not only killed all the commodity hardware and the horizontal strategy; he went radically vertical. In addition to the basic hardware and operating system, he added applications (iLife, iWork) and peripherals (like the iPod). He even added retail stores.  Today, people would let Steve Jobs make such a radical turn at nearly any company because of the outcome he’s achieved at Apple. But remember that when Jobs returned to Apple in 1996, he was doing so as the co-founder and CEO of NeXT computer, a marginal computer workstation company which Apple purchased for less than $500M. Let’s just say he didn’t have the benefit of the doubt. What he did have: the founder’s courage to innovate despite the doubters.  Innovator’s requirements – what does it take to find the product cycle? So where did Jobs get this “founders courage” and what is it? In addition to general brilliance, we see three key ingredients to being a great innovator:  Comprehensive knowledge Moral authority Total commitment to the long-term Great founding CEOs tend to have all three and professional CEOs often lack them. Here’s why.  Comprehensive knowledge To create the original innovation to start a company, founders must exhaustively understand the technology required, the likely competitors (past, present, and future), and the market in all its variations and segmentations.  This knowledge becomes the foundation on top of which a gigantic knowledge pyramid gets built which includes:  Knowledge of every employee who gets hired and why Knowledge of every product and technology decision that gets made Knowledge of all customer data and feedback generated from day one Knowledge of exactly what’s strong and weak about the code base Knowledge of exactly what’s strong and weak about the organization This pyramid of knowledge enables new, unique innovative thinking. This knowledge is nearly impossible to replicate. Without it, thoughtful people lack the courage to bet the company on entirely new directions.  In retrospect, it seems totally natural that Larry Ellison transformed Software Development Labs from a consulting business into a software company called Oracle. But would a professional CEO have understood enough about the team, the market and the competition to make such a radical change?  Moral authority Often, true innovation requires throwing out many of the foundational assumptions of the company. If the company is significant, doing so may be extremely difficult for the professional CEO. The company’s core belief system is often entangled in those assumptions. Since the founding CEO made the assumptions in the first place, it is much easier for her. An excellent example of existing, invalid assumptions paralyzing a whole set of companies recently played out in the music industry.  The music business has been continuously disrupted and revolutionized by the underlying technology since the outset. In fact, it’s still widely referred to as the “record industry,” because the entire business was created by the invention of the vinyl record. For the first few decades of the industry, songs were never longer than 3 minutes due to a technological limitation (the record would skip if the grooves were too thin). The album itself is a construct that originated with the total number of songs one could fit on a 33 1/3 Revolutions Per Minute (RPM) vinyl record. In the 80s, the invention of the CD completely revitalized the industry and led to (literally) record-breaking sales.  Despite this dynamic history, modern record company executives badly missed the most sweeping technical innovation—the Internet.  How was that possible? By the time the Internet arrived, all of the original founders of the record companies had been bought out, retired, or died. The new, professional CEOs were unwilling to let go of the most basic assumptions driving the cost structure of their businesses. Specifically, they wouldn’t give up their stranglehold on distribution and the value they placed on owning the recording.  They were proficient at running the current business, but lacked both the courage and the moral authority to jeopardize the old business model by embracing the new technology. The transition would have been far easier if these executives running the companies had invented the old models. The founders of the music industry likely would have ditched old assumptions, because they would have been nuts to do continue believing an assumption that no longer makes sense.  Conversely, Netflix, run by cofounder Reed Hastings, provides an excellent counter-example. Faced with a similar transition (from distribution of the physical recording to electronic distribution of the bits), Netflix let go of its old assumption that customers wanted DVDs mailed to them, invested in innovation and produced a series of brilliant new offerings (streaming video to Xbox 360, Sony Playstation 3, Tivo, Wii, connected DVD players, and a host of  devices) that are enabling them to transition smoothly. Hastings wasn’t married to the old distribution model precisely because he invented it.  Total commitment to the long term Founding CEOs naturally take a long view of their companies. The company is their life’s work. Their emotional commitment exceeds their equity stake. Their goal from the start is to build something significant. They instinctively know that big product cycles come from investment and that even the biggest product cycles will eventually fade. Professional CEOs, on the other hand, tend to be driven by relatively shorter-term goals. They are paid in terms of stock options that vest over 4 years and cash bonuses for quarterly and yearly performance.  Investments in innovation do not pay out in the current quarter. Typically, they don’t even pay out in the current year. If you care about your bonus this year, you are directly incented not to make investments in new inventions as you will incur the expense, but reap no profits.  Any serious innovation requires a heavy investment. Beyond the up-front cash, costs may include lower growth, bad publicity, and internal grumbling as existing features atrophy. Recently, we’ve seen Facebook’s founding CEO Mark Zuckerberg make a series long-term bets. He’s radically revamped critical features such as the feed used by hundreds of millions of people. He’s made bold changes to key policies such as privacy and platform. For years, he’s avoided taking any revenue inconsistent with optimizing the user experience.  By committing to the long-term, he put himself under tremendous pressure in the short-term. The press broadly questioned his business acumen and Facebook’s ability to generate any meaningful revenue. Bottom feeding publications such as Valley Wag even went so far as to call for his resignation. Employees leaked to the press that they thought he should sell the company, and some quit due to temporary declines in page views and user growth. We now know these critics were wrong and Zuckerberg was right, but would a professional CEO have taken these risks and endured such vicious attacks for unseen, long-term benefits?  In theory, any professional CEO can rise to the challenge of being a great long-term CEO, but they have to commit to innovation and adopt the three characteristics above. We’ll now take a look at two professional CEOs who have done just that.  Understanding the exceptions – why do professional CEOs succeed? Two spectacular exceptions to the founding CEO rule are John Morgridge at Cisco and Eric Schmidt at Google. Let’s look at how these two overcame the issues illustrated above and massively triumphed.  Eric Schmidt–Getting the goodness of the founders and combining it with the know-how of the professional Eric Schmidt has been a spectacular success at Google. He hasn’t just maximized the original product cycle (which was built around search—although he’s done a brilliant job of accomplishing that feat), but he has also overseen the creation of important new product cycles such as Android and Google Apps. Interestingly, he did so by teaming with the founders and gaining the benefits of their knowledge, moral authority, and long-term vision. This may seem like an obvious strategy, but shared leadership and control are incredibly difficult to achieve. Doing so involves intense communication, deep humility, and some hard compromises. Almost nobody ever pulls it off. And that’s why Eric Schmidt is such an important exception.  John Morgridge—All by himself John Morgidge is another spectacular counter-example of the non-founding CEO building a tech powerhouse. John took over as the company’s second CEO in 1988, a role he held until he became chairman in 1995. With John as CEO, Cisco grew from $5m to $1b in revenue and from 34 to 2,250 employees. He also took the company public in 1990.  How did he do it? In speaking to many Cisco employees over many years and observing the dynamic, innovative product and M&A strategy that enabled them to defeat fierce competitors such as Wellfleet and Synoptics, I believe John Morgridge may have been the greatest professional CEO in the history of the high tech industry. He worked tirelessly to develop the characteristics outlined above as well or better than any founder. He was smart, knowledgeable, tough, innovative, courageous, and, unlike most professionals, legendarily cheap. He once said that if you can’t see your car from your hotel room, then you are paying too much.  As a result of this magical combination of qualities, he achieved complete moral authority. He is proof positive that a professional CEO can build a great technology company. At the same time, he is the ultimate exception.  In the best case, you may find the next John Morgidge. If you do, hire him! Otherwise, here is our general rule of investing. If you hire a professional CEO into a company that has found a large product cycle, the professional will be able to maximize that product cycle, but likely won’t find the next one. If you hire a professional to find the product cycle, get the jelly, because your company will soon be toast.  Are all founders CEO material? The simple answer is “no.” Being CEO requires a tremendous amount of skill. The larger the company becomes, the more skill that’s required. Steve Blank does an excellent job of illustrating many of these required skills in his outstanding Scalable Start-up series. We almost never meet a founder who has these skills at the time they found the company.  Therefore, the founder must learn the skills required to run the company on-the-job. Doing so is often a miserable, debilitating experience. I can attest first hand to the frustration and exhaustion associated with being responsible for hundreds of employees while learning how to do the job. I constantly made mistakes a more experienced CEO wouldn’t make. These mistakes can be costly in terms of money and jobs.  So, why would any founder want to learn to be CEO on-the-job? Because doing so is the most sure fire way to build a great company.  How does one know if they have what it takes to be the long-term CEO of the company? In our experience, there are two required characteristics:  Leadership as described in my early post Notes on Leadership. Desire—not necessarily the desire to be CEO, but the burning, irrepressible desire to build something great and the willingness to do whatever it takes to get there. If the founder has these characteristics, then we would encourage them to give it a try. If they fail, we will help them look for the next Eric Schmidt or John Morgridge.
So you’ve achieved product market fit and you are ready to start building the company. The board encourages you to bring in some “been there done that” executives who will provide the right financial, sales and marketing expertise to help you transition from a world-class product to a world-class business. You see a few candidates that you like, but the VC on the board says: “You are under shooting. This is going to be a huge company. We can attract better talent.” So you aim high and bring in a super accomplished head of sales. This guy has run huge organizations with thousands of employees. He has stellar references and even looks the part. Your VC loves him, because he has an awesome resume.  Six Months Later… Fast-forward six months and everyone in the company is wondering why the sales (or marketing or finance or product) guy who has produced nothing got such a monster stock option package. Meanwhile, the people doing all the work have much fewer options. Even worse than not getting your money’s worth, now the company is in trouble, because you’ve been missing the numbers as your super expensive executive sits on his butt. What the frak just happened?  The most important thing to understand is that the job of a big company executive is very different from the job of a small company executive. When I was managing thousands of people at Hewlett Packard (after the sale of Opsware), there were an incredible number of incoming demands on my time. Everyone wanted a piece of me. Little companies wanted to partner with me or sell themselves to me, people in my organization needed approvals, other business units needed my help, customers wanted my attention, and so forth. As a result, I spent most of my time optimizing and tuning the existing business. Most of the work that I did was “incoming.” In fact, most skilled big company executives will tell you that if you have more than 3 new initiatives in a quarter, you are trying to do too much. As a result, big company executives tend to be interrupt-driven.  In contrast, when you are a startup executive, nothing happens unless you make it happen. In the early days of a company, you have to take 8-10 new initiatives a day or the company will stand still. There is no inertia that’s putting the company in motion. Without massive input from you, the company will stay at rest.  So what happens? Once you hire one of these big company executives, there are two dangerous mismatches that you will face:  Rhythm mismatch—Your executive has been conditioned to wait for the emails to come in, wait for the phone to ring, and wait for the meetings to get scheduled. In your company, he will be waiting a long time. If your new exec waits (as per his training), your other employees will become suspicious. You’ll hear things like “what does that guy do all day long?” and “why did he get so many options?” Skill set mismatch—Running a large organization requires very different skills than creating and building an organization. When you run a large organization, you tend to become very good at tasks such as complex decision-making, prioritization, organizational design, process improvement, and organizational communication. When you are building an organization, there is no organization to design, there are no processes to improve, and communicating with the organization is simple. On the other hand, you have to be very adept at running a high quality hiring process, have terrific domain expertise (you are personally responsible for quality control), know how to create process from scratch, and be extremely creative about initiating new directions and tasks. How can you stop things from going horribly wrong? There are two key steps to avoiding disaster:  Screen for devastating mismatches in the interview process Take integration as seriously as interviewing Screen for mismatches How do you tell if the rhythm mismatch or the skill set mismatch will be too much to overcome? Here are some interview questions that I found very helpful:  What will you do in you first month on the job? Beware of answers that over emphasize learning. This may indicate that the candidate thinks there is more to learn about your organization than there actually is. More specifically, he may think that your organization is as complex as his current organization. Beware of any indication that the candidate needs to be interrupt-driven rather than setting the pace personally. The interrupts will never come. Look for candidates who come in with more new initiatives than you think are possible. This is a good sign. How will your new job differ from your current job? Look for self-awareness of the differences here. If they have the experience in what you need, they will be articulate on this point. Beware of candidates who think that too much of their experience is immediately transferable. It may pay off down the line, but likely not tomorrow. Why do you want to join a small company? Beware of equity being the primary motivation. 1% of nothing is nothing. That’s something that big company executives sometimes have a hard time understanding. It’s much better if they want to be more creative. The most important difference between big and small companies is the amount of time running vs. creating. A desire to do more creating is the right reason to want to join your company. Aggressively integrate the candidate once on board Perhaps the most critical step is integration. You should plan to spend a huge amount of time integrating any new executive. Here are some things to keep in mind:  Force them to create—Give them monthly, weekly, and even daily objectives to make sure that they produce immediately. The rest of the company will be watching and this will be critical to their assimilation. Make sure that they “get it”—content-free executives have no value in startups. Every exec must understand the product, the technology, the customers, and the market. Force your newbie to learn these things. Consider scheduling a daily meeting with your new exec. Require them to bring a comprehensive set of questions about every thing they heard that day, but did not completely understand. Answer those questions in depth; start with first principles. Bring them up to speed fast. If they don’t have any questions, consider firing them. If in 30 days, you don’t feel that they are coming up to speed, definitely fire them. Put them in the mix—Make sure that they initiate contact and interaction with their peers and other key people in the organization. Give them a list of people that they need to know and learn from. Once they’ve done that, require a report from them on what they learned from each person. Final thoughts Nothing will accelerate your company’s development like hiring someone who has experience building a very similar company at larger scale. However, doing so can be fraught with peril. Make sure to pay attention to the important leading indicators of success and failure.
After being an entrepreneur for most of my adult life, I’ve now been a part-time angel investor for 5 years and a full-time venture capitalist for the past 9 months. During that time, I’ve come to appreciate the real value that great venture capitalists provide: amazing informational awareness, comprehensive business networks, providing brand cover for companies so that they can recruit and raise more money effectively, and more.  Still, some VCs do things that I really don’t like. This post is for them.  1. They are fake casual A lot of VCs dress casually, speak casually and encourage the companies in which they invest to have casual board meetings and casual discussions with investors. They say things like, “We’re part of the team with you and we’re building this together, so no need for formal behavior, formal thinking, or unnecessary preparation.” This would all be terrific—if it were actually true.  In reality, the entrepreneur is building the company, and I’ve yet to see a VC who shows up in the company’s office at 8 am and works until 11 pm 7 days/week, so no: they are not “part of the team”. More importantly, VCs invest other people’s money into their companies and have a strong fiduciary responsibility to make sure that the entrepreneurs run their companies properly. Sure, casual board meetings might be fine as long as the company is delivering terrific results. However, at the first sign of trouble, I hear things like:  “The founder is not really capable of being CEO. He doesn’t even present critical information in an organized fashion at the board meeting.” Well, maybe he would have done that had you not instructed him to “keep things casual”.  As an entrepreneur, you should take board meetings seriously because board meetings are serious. If one of your VCs implies that board meetings aren’t serious business or that they prefer that board meetings be primarily open-ended discussion, you should view this as a 5 year-old child requesting complete autonomy and unlimited candy—that may be what they are asking for, but what they really crave is structure.  2. They want to grab a cup of coffee Some of my best friends are VCs, and I am always happy to see them. Some VCs have important business to discuss with me and I look forward to those meetings. Some VCs are extraordinarily smart and meeting them is educational, and I am grateful for their insight. However, many VCs who want to have coffee with me are none of the above. Worse yet, they have no agenda and no purpose. They just want to “compare notes.”  When I was CEO, I didn’t take meetings with no agenda and no purpose. I’m not sure why I should take them as a VC. Of course, when I was CEO, people knew better than to request a meeting with me with no agenda and no purpose. I think that these VCs have mammas that didn’t raise them right.  More importantly, VCs having coffee with one another is a key conduit for VC groupthink.  This is how you get 30 venture-backed startups going after the same market at the same time.  It’s bad news for VCs and it’s bad news for their companies.  My proposal: less coffee, more original thinking.  3. They confuse pattern matching with knowledge As a VC, I have come to understand the value of “VC pattern matching.” Experienced VCs have been on dozens of boards and seen thousands of deals. As a result, they recognize patterns of strategy and behavior that generally work, and patterns that generally fail. This is very valuable information for an entrepreneur who, if lucky, only sees one deal in his career.  Unfortunately, many VCs overreach with their pattern matching. Rather than saying, “Most companies who sell at this stage, regret doing so, and here’s why,” they’ll say, “Don’t sell now, that’s a stupid idea.” Other commonly expressed and incomplete patterns include “don’t hire very fast”, “hire faster”, “don’t build a sales force”, “build a sales force”, “don’t build downloadable software”, and “build an iPhone app”.  None of this is useful input for your specific company.  A pattern-matched instruction without a rationale provides very little help. Either admit that you are pattern matching and that pattern matching is limited, or explain yourself.  4. They are pseudo-tough VCs often confuse marginal social courage with real courage. For example, they think CEOs who fire people easily are tough. I’ve fired dozens of people and laid off hundreds. None of them was easy—not a single time. Having an easy time firing your loyal employees indicates a lack of courage and a lack of leadership. More specifically, it indicates a lack of willingness to really understand the negative consequences of those actions. If you fire people easily, you likely lack the toughness to look in the mirror.  VCs who value pseudo-toughness often display it themselves. I see them bully entrepreneurs by directing them to do things without having the intellectual courage to explain “Why?”. They berate the CEOs in their companies, but don’t have the cojones to stand up to their own senior partners. They undermine their own CEOs in their own companies by interfering with important decisions, but don’t have the moral fortitude to even tell the CEOs that they are doing it.  These behaviors are not tough; they are pseudo tough. Pseudo tough VCs really annoy me, and damage their companies in the process.  If you are a VC and want to be tough, be real tough.  For a VC, real tough is:  The strength to explain in detail to an entrepreneur what she is doing wrong when the company is doing well, in order to improve her performance. The courage to do what’s right even if it makes you look really weak to the partners in your firm. The valor to tell an entrepreneur precisely why you are not going to invest in her company rather than giving the traditional “VC no” by just going dark. Give it a try, tough guys.
Almost everybody knows that Ron Conway has invested in a huge percentage of the top technology companies in the world, but entrepreneurs often ask me why Ron would be a good investor for them. When I talk to venture capitalists, they know that Ron is important, but they seldom know why. Gary Rivlin, despite writing an entire book on Ron, completely failed to understand what Ron does (which is why the book is so bad and not worth reading).  Speaking as an entrepreneur, if I were to start a firm today and could only have one investor, it would be Ron Conway. This post explains why.  Before doing so, I need to make some important disclosures. Ron is an investor in Andreessen Horowitz. I am an investor in Ron’s new fund. Ron has made significant donations to my favorite charity (Via Rehabilitation Services). I have made significant donations to Ron’s favorite charity (UCSF Medical). Ron’s son Ronny works for Andreessen Horowitz. Ron was an investor in Loudcloud/Opsware (the company that I founded). Ron and Andreessen Horowitz have co-invested in many companies and we plan to co-invest in many more.  OK, now that that’s out of the way, let’s get down to business. People often misunderstand Ron, because he is not like other Angels or Venture Capitalists. Comparing him to Reid Hoffman or Roelof Botha is like comparing an apple to a basketball.  Ron’s Network Ron runs a network. In Ron’s network, the nodes are important business people and Ron governs and routes the calls. In order to place a call on the network, you must meet certain important requirements:  You must have a relationship with Ron. Note that I say “relationship” as different than “have met” or “know.” More on this distinction later. You must answer when called. Ron ensures extremely high reliability in his network by requiring all nodes to participate if called upon. You must be in good standing with Ron.Taking an investment from Ron is the simplest way to establish a relationship and qualify to make calls on the most important business network in technology. So, how does this work? The other day my friend David Weiden and I were discussing this, and he told a fantastic story that perfectly illustrates the value of Ron’s network:  My perspective on angel and VC investors is shaped by my own experiences as an entrepreneur on the firing line trying to get revenue in the door at a startup called Tellme after the dot com bust. A particularly memorable moment was one night I was in the office at 11pm with our then director of finance, Alfred Lin (now COO of Zappos). We were at wit’s end because we had just lost our biggest customer opportunity which was with a large US telecom company.  Normally “losing” didn’t phase us as we even developed a motto: “losing is just a step on the path toward winning.” But this time, we were really in trouble because the customer was signing a long-term contract with our competitor later that week.  We had already appealed to the President of the division; the only further escalation points were to the CEO or Chairman.  We had already tapped out our VC contacts.  If we lost this customer, as Alfred dryly pointed out, it was unlikely we’d be able to get our revenue over our fixed costs in any reasonable timeframe.  I asked Alfred what about any of our angel investors, so we went through them and none seemed likely to be able to pull this off. Alfred said, “Well there is this one other investor, Ron Conway.”  I didn’t know Ron at the time, and his investment was quite small.  But we had nothing to lose by reaching out. So sometime after 11pm, I wrote Ron and essentially said: “hello, you don’t know me, I’m an executive at a company you’re an investor in, and we need a meeting—in person—with the CEO himself of this Fortune 50 company—this week—and if you can’t make this happen, hey that’s ok, but we may be going down—sorry.”  Ron wrote back in literally 2 minutes and said, in what I have learned is Ron’s distinctive email style (immediate, short, all caps), “AM ON IT.”  The next morning, Ron had done it.  Tellme went on to win an eight figure contract that led to a nine figure contract. That’s a lot o’ money from a desperate email from someone he’d never met at 11pm. Tellme was eventually acquired by Microsoft for about $800mm.  My view of building startups is that it is somewhere between impossible and almost impossible, so you want all the help you can get.  Tellme’s VCs (The Barksdale Group, Benchmark and Kleiner Perkins) were also extremely helpful, and I don’t think Tellme could have succeeded without them, including help with customer connections. But my personal opinion is that I’m not sure we would have made it without Ron either. Why Ron is Unique Now that we understand Ron’s value, a good question is why don’t more people run a network like Ron? Why is Ron unique? In my view there are four key ingredients to Ron’s business:  A ridonkulous work ethic—If Ron’s awake, he’s working. He can be at a party, in his pajamas, or at the Super Bowl. Ron is always on the job and the network is always on. Pure motives—Ron does what he does, because he likes helping people succeed in business. He gives most of the money that he earns away to charity, so greed never clouds his vision or his mission. In fact, the investment component is almost an aside to his primary purpose. Super human courage—Ron fears no man and he definitely fears no phone call. When you ask Ron for help, you don’t have to wait a week while he warms up a connection. Ron’s network is always on. A way of doing business—This is the unspoken key to Ron’s success. He’s not judgmental in the conventional sense, but he acts with extreme prejudice when it comes to the proper way to conduct oneself in a relationship. If you behave below Ron’s standards in this respect, you will not be allowed to participate. As a result, Ron’s social network is a fantastic place to conduct business. Everyone is courteous, timely, and straightforward. Ron gets rid of the friction and enables his business partners to focus on what’s important. So, the next time somebody asks you: “why should I try to get an investment from Ron Conway?”, let them know that (as The Game would put it) “if they are slipping in Silicon Valley and they get their deal snatched…”
Fred Wilson wrote a counter post to my The Case for the Fat Startup that you can find here. Before countering his counter, I’d like to say that Fred is one of my favorite VCs and has a marvelous track record of success. Further, I’d like to thank Fred for posting his article, as it enables me to clarify a couple of subtle but important points.  I actually agree with Fred in the base case and never said otherwise: entrepreneurs should build the product that everybody wants before raising a boatload of cash to build the company. But Fred says one thing that is confusing and another that’s just not accurate:  Only raise a boatload of cash once you’ve achieved product market fit. Product market fit isn’t a one-time, discrete point in time that announces itself with trumpet fanfares. Competitors arrive, markets segment and evolve, and stuff happens—all of which often make it hard to know you’re headed in the right direction before jamming down on the accelerator. Only Marc and I could have pulled off the Loudcloud/Opsware miracle; other entrepreneurs shouldn’t even try. We certainly didn’t script the movie the way it turned out. I’m not recommending that you as an entrepreneur pattern your own startup after mine. But as an entrepreneur, you have to deal with adversity, as we did with Loudcloud/Opsware. My experiences there are highly relevant to other entrepreneurs. In fact, they are more relevant than Fred’s pattern matching. Let’s talk about each point in turn.  Product Market Fit Myths First, I agree that the best way to build a big company would be to find product market fit and then raise a bunch of money to build a big business. But sometimes, things aren’t so clear. Let me try to describe some of the ways things can get messy as a series of myths about product market fit.  Myth #1: Product market fit is always a discrete, big bang event Some companies achieve primary product market fit in one big bang. Most don’t, instead getting there through partial fits, a few false alarms, and a big dollop of perseverance. By the time it got acquired, Opware had achieved product market fit for a category of software called data center automation. But it wasn’t at all obvious that was going to be our destination while we were getting there. We actually achieved product market fit in a number of smaller sub-markets such Unix server automation for service providers, then Unix server automation for enterprise data centers, then Windows server automation, and eventually network automation and process automation. Along the way, we also built a few products that never found product market fit.  Similarly, Joel Spolsky of Joel on Software and Fog Creek Software fame has an exciting new company called Stack Overflow. He has achieved product market fit in the collaboratively edited Q&A market for audiences such as software engineers and mathematicians. Is this the primary product market fit? Neither of those markets seem that big. Will he need significant new features to find the big product market fit? Probably. Should he invest or stay lean? Good question, and there’s no formulaic answer.  Myth #2: It’s patently obvious when you have product market fit I am sure that Twitter knew when it achieved product market fit, but it’s far murkier for most startups. How many customers (or site visits or monthly active uniques or booked revenue dollars, etc.) must you have to prove the point? As I explain above, there may be multiple sub-markets, each of which need their own product. I show below that Fred himself didn’t realize that Loudcloud had achieved product market fit even though we had. It’s usually not black and white.  Or let’s try a consumer products example. Apple’s first iPod shipped in November 2001. It took nearly two years (91 weeks, to be precise) to sell its first million units. In contrast, Apple’s iPhone 3GS shipped June 2009 and shipped 1M units in 3 days. At what point is it obvious to the original iPod team that they’ve achieved product market fit?  Myth #3: Once you achieve product market fit, you can’t lose it. Fred implies that we raised a boatload of money for Loudcloud prior to achieving product market fit. This is not true. Four months after founding Loudcloud, we had already booked $12M in customer contracts, so we had product market fit by most measures. I’d defy any VC including Fred to point to a company with a $36M run rate 4 months after founding where the VC advised, “stay lean until you achieve product market fit.”  But after that bolt out of the starting gate, the market for cloud services changed dramatically. After Exodus went bankrupt in September 2001, the market for cloud services from semi-viable companies went to zero and we lost product market fit as a cloud services provider. We had to rebuild completely and would ultimately find product market fit in a different set of markets altogether.  Myth #4: Once you have product-market fit, you don’t have to sweat the competition. It’s fine to stay lean if you are not quite sure that you have product market fit and there are no competitors in your face every day. But usually there are. In fact, the best markets are usually the ones in which competition is fierce because the opportunity is big. How long should you stay lean before attacking? Again, there is no formula that works in all (or even most) cases.  Exceptions that prove the rule Now, there are some companies such as Twitter (one of Fred’s brilliant investments) for which the above myths are actual truths. However, I propose that Twitter is more exceptional than Loudcloud or Opsware in that most entrepreneurs are dealing with a situation that looks much more like Opsware than Twitter.  The Marc and Ben Special Second, let’s talk about the Marc and Ben Special. Fred writes: “Ben explains that Loudcloud raised $350mm in four rounds of financing (including an IPO) in the first 15 months of its life. Marc Andreessen and Ben Horowitz can do that. Most of you can not.”  It’s true that we raised a lot of money, and not all first-time entrepreneurs can raise that much money. But that’s not my point. The most important fund raising that we did as it relates to The Case for the Fat Startup was the very last round (as is very clear in the original post). We raised that money as Opsware, long after we had lost all of our magic fairy dust. Marc had moved on to found Ning and I was the CEO who nearly ran Loudcloud into the wall. I am quite sure that I did not have exceptional fund raising capabilities at that point.  In summary, let me repeat that I agree with Fred in the base case: first build the product that everybody wants, then raise enough money to build the company. If you can build a big company that way, by all means do it.  Having said that, your story will almost certainly not be that clean. You might achieve partial product market fit at the same time as a scary competitor, you might not be sure that you have product market fit, you might lose product market fit. When one or more things happen, no pattern matching will save you. You will have to figure out for your own unique situation a) whether there is a clear and present market and b) if there is, how you can take it.  Fred implies that what we did at Loudcloud/Opsware was extremely difficult and while Marc and I could pull it off, other entrepreneurs shouldn’t try it. My point is that trying it isn’t really a choice. As an entrepreneur, you will sometimes (maybe more often than you like) find yourself in a difficult situation. I hope to have provided some insight on how you might come out alive when that happens.
Much has been written and said about the current economic downturn and the resulting lessons on how to run high-technology companies. Quite famously, Sequoia Capital, the premier venture capital firm in Silicon Valley, held a mandatory all-CEO meeting in fall 2008 during which it advised them to “Cut spending. Cut fat. Preserve capital.” (You can see the presentation here.)  The presentation catalyzed a movement. Start-ups everywhere adopted a lean, low-burn, low-investment model. To this day, companies seeking funding at our venture firm, Andreessen Horowitz, proudly proclaim in their pitch decks that they are raising tiny amounts of capital so they can run lean.  On the one hand, it is a fact that capital invested is negatively correlated with returns in the venture capital industry. Pumping too much money into a small start-up is unhealthy for both the company and the investor. On the other hand, Facebook has raised several hundred million dollars and is on track to produce fantastic returns for all of its investors.  So what’s a start-up to do? Much of what has been written and said about lean start-ups makes good sense. However, that advice is often incomplete, and some of the things left unsaid are the least intuitive. In this article, I will articulate some of those things left unsaid in arguing the case for the Fat Start-up.  Here is my central argument. There are only two priorities for a start-up: Winning the market and not running out of cash. Running lean is not an end. For that matter, neither is running fat. Both are tactics that you use to win the market and not run out of cash before you do so. By making “running lean” an end, you may lose your opportunity to win the market, either because you fail to fund the R&D necessary to find product/market fit or you let a competitor out-execute you in taking the market. Sometimes running fat is the right thing to do.  What the hell do I know? Al Pacino couldn’t be no gangsta, DeNiro in ‘Casino’ he no gangsta Wanna be, wanna see, wan’ get a shovel dig Tookie up n*&%^!, cause he know gangstas –The Game, LAX Files  At this point, some of you are asking yourselves, “What the hell does Ben know? If he were really smart, then he’d know that thin is in.” It turns out that I have some experience in managing a fat start-up through the dot-com implosion of the early 2000s. This chart offers a brief summary of the NASDAQ Composite Index when I was CEO of Loudcloud and Opsware (click to enlarge):    Note that the Nasdaq Index is very highly correlated to the start-up funding environment. During the two years I was CEO of Opsware, the Nasdaq fell 80 percent, far more than it has fallen during the current 2008-10 downturn. So the 2000-02 environment was at least as traumatic as this one for Silicon Valley companies–and arguably much worse.  Here is a brief summary of Loudcloud/Opsware’s fund-raising history during that time:  September 1999: Loudcloud founded November 1999: Loudcloud raises $21 million at a $45 million pre-money valuation (Benchmark Capital is the lead investor) January 2000: Loudcloud borrows $45 million from Morgan Stanley (MS) June 2000: Loudcloud raises $120M at a $700M pre-money valuation March 2001: Loudcloud goes public on Nasdaq, raises $160 million and is valued in the public markets at approximately $480 million. Total funds raised to this point: $346 million. August 2002: Loudcloud sells the managed services business to EDS (this was the only actual business we had at the time) for $63.5 million and becomes a software company (and changes its name to Opsware). September 2002: Opsware trades for 35 cents per share or approximately a $28 million market cap. September 2007: Hewlett-Packard (HPQ) acquires Opsware for $1.6 billion During this period, Loudcloud/Opsware had over 20 direct competitors. Almost all the competitors from the Loudcloud era went bankrupt, including MFN/SiteSmith, Exodus, LogicTier, Williams Communication, Global Crossing, WorldCom/Digex and Storage Networks. Those that survived got bought with valuations of less than $100 million (e.g., Totality) or still have very low valuations (e.g., Navisite).  How did we do it? I had a dream I could buy my way to heaven When I awoke, I spent that on a necklace —Kanye West, Can’t Tell Me Nothing  So how did we navigate through the great dot-com crash, crush the competition, emerge as the No. 1 company in our space and sell the company to HP for $1.6 billion? Did we “cut spending, cut now, and preserve capital?” Did we make cash preservation our No. 1 priority?  No, we didn’t. To underscore the point, here are Loudcloud’s average monthly cash burn figures for the quarters ending in:  Apr 2001: $39 million Jul 2001: $35 million Oct 2001: $29 million Jan 2002: $25 million Apr 2002: $22 million Jul 2002: $19.4 million As you can see, we were aggressively investing in the business throughout 2001 and 2002. While we did reduce our cash burn, we did not make cash preservation our No. 1 priority. As it was, over the course of the transition from Loudcloud to EDS, we sadly laid off 400 employees and transferred another 150 to EDS. However, we didn’t scrimp and save our way to a $1.6 billion acquisition: Instead, it’s what we chose not to cut that ultimately got us there.  Loudcloud was a Web-hosting business. Today, we’d call it a “cloud services” business, but people weren’t quite ready for the “cloud” in 2001. We supercharged our hosting business with software (called Opsware) that automated our Web-hosting operations. The other cloud services businesses of our day also had software investments. However, as the macroeconomic climate changed, they all “cut deep and cut now.” In the end, they ended up putting their software in maintenance mode and stopped building new features.  As we weighed a decision to make the same deep cuts in our own software R&D efforts (a move advocated by the intelligentsia of the day, as well as nearly every MBA we had working in the company), I faced a hard decision: Cut deep and get to cash flow break-even quickly or continue to invest heavily in software?  In the end, I decided to run fat so that we could continue to invest in the Opsware software. At the end of the day, I realized that much larger companies like IBM (IBM) could hire smart people and train them. But without a lasting technology-based advantage, it would be increasingly hard for us to defeat them and build our customer base despite early wins with Ford (F), Fox Sports, and the U.K. government (to name just three of our early customers).  Running fat meant that I laid off zero software engineers so that we could keep on investing in our technology, find our product/market fit, and build a lasting technological advantage.  Still, we had to reduce costs or we would clearly go bankrupt. With this new view of the world, I decided that rather than divesting our intellectual property, I would divest our business. Now, that may sound logical the way I’ve described it, but consider these facts:  We were generating $65 million/year from the Web-hosting business. We were a publicly traded company with a market capitalization of close to $200 million. All of our investors (pubic and private) believed in and invested in the Web-hosting business. We had close to 500 employees at the time. Nearly all of them were supporting the Web-hosting business. We had no other business. We had software, but we did not have a software product and certainly did not have a software business. Despite all of this, we sold the Loudcloud hosting business to EDS and became Opsware the software company. It was not clear that this was a good idea at the time. In fact, the market thought it was a terrible idea: Our stock promptly lost 80 percent of its value, putting our market cap at about $28 million. It’s worth pointing out that this was about $40 million less than the cash that we had in the bank.  During the transition, we shrank our payroll from 450 employees to fewer than 100. Even with this massive reduction in expenses, it would take another three quarters to reach cash-flow break-even, a milestone we finally reached in Q2 of 2003.  One could argue–and many did–that we should have cut a lot deeper than we did given that we only had one customer. Although EDS was a very large customer (it generated $20 million/year in revenue), a brand new software company doesn’t need 100 people. We could have taken steps to reach cash-flow break-even immediately (clearly, that might have helped us get above 35 cents per share). In other words, we could have “gone lean” by cutting deep, cutting now, and preserving capital.  But rather than do what seemed obvious, I decided to keep on investing. Here’s why: In an economic boom, cash is great, but not necessarily a meaningful competitive advantage. If every company is well funded, being super-well funded doesn’t help you win. In fact, being super-well funded can actually screw you.  But in a bust (like the one we were in), having a lot of cash can be a huge competitive advantage because you can use that cash to put enormous pressure on your underfunded competitors. And that’s what we did.  We spent aggressively to match our best competitor’s product, feature for feature. And we used our public currency to acquire important adjacent functionality (network, process and storage management) that our competitors did not have and couldn’t acquire because they didn’t have the cash (or the equity).  In doing so, we were able to beat a really high-quality start-up (Bladelogic) that did not have the massive technical and cultural baggage that came from exiting the managed services business. Bladelogic was eventually sold to BMC (BMC) for $800 million. But I’m firmly convinced that had we not spent the money, Bladelogic would have emerged as the No. 1 company in the space and gotten the $1.6 billion exit instead of Opsware.  In the end, by continuing to invest aggressively in our technological advantage despite a hellacious funding environment, we were able to turn a doomed business into a winning one.  That is the very short version of how we won the market during the great tech recession of the early 2000s.  So did we learn? “Hegel was right when he said that we learn from history that man can never learn anything from history.” –George Bernard Shaw (1856-1950) Every start-up is in a furious race against time. The start-up must find the product-market fit that leads to a great business and substantially take the market before running out of cash. As a result, the top two priorities are always to:  Find the product that 1,000 enterprise or 50 million consumers want to buy and grab those customers before your competitors do. Raise enough cash and spend it intelligently so that you don’t go broke along the way. Clearly, you can’t succeed if you don’t achieve both priority No. 1 and priority No. 2. So why is taking the market more important than not running out of cash? Because the only thing worse for an entrepreneur than start-up hell (bankruptcy) is start-up purgatory.  What is start-up purgatory, you ask? Start-up purgatory occurs when you don’t go bankrupt, but you fail to build the No. 1 product in the space. You have enough money with your conservative burn rate to last for many years. You may even be cash-flow positive. However, you have zero chance of becoming a high-growth company. You have zero chance of being anything but a very small technology business (see Navisite). From the entrepreneur’s point of view, this can be worse than start-up hell since you are stuck with the small company.  You recruited all the employees, you raised all the money and you made all the promises. You either see it through or leave–without your good reputation. No one wants to work for an entrepreneur who quits his or her own company. This is start-up purgatory, where you work just as hard, reap none of the rewards, and watch all your best people leave you. It sucks to be you.  The Bottom Line Spending a little or spending a lot is a means, not an end. Choose the right strategy to win the market or you may end up going straight to purgatory.  As you listen to the virtues of the lean start-up–lightweight sales, light engineering, and so on–keep the following in mind:  If you are a high-tech start-up, your value is in your intellectual property. Don’t stare at your spreadsheets so long that you get confused about that. You cannot save your way to winning the market. The best companies can raise money even in this market. If you are one of those, you should consider raising enough to wipe out your competition. Thin is in, but sometimes you gotta eat.
At Andreessen Horowitz, we favor founders running the company. The reasons are many (and will be the topic of a future blog post). As a result, we spend a great deal of time thinking about the characteristics required to be a founding CEO. Perhaps the most important attribute required to be a successful founding CEO is leadership. So what is leadership and how do we think about it in the context of the CEO job? Are great leaders born or made?  Most people define leadership in the same way that Supreme Court Justice Potter Stewart famously defined pornography when he said: “I know it when I see it.”  A better definition comes from former Secretary of State Colin Powell who said: “You have achieved excellence as a leader when people will follow you anywhere if only out of curiosity.” For our purposes, we can generalize this to be the measure of the quality of a leader: the quantity, quality and diversity of people who want to follow her.  So what makes people want to follow a leader? We look for 3 key traits:  The ability to articulate the vision The right kind of ambition The ability to achieve the vision Let’s take these in order.  The ability to articulate the vision—The Steve Jobs Attribute Can the leader articulate a vision that’s interesting, dynamic, and compelling? More importantly, can the leader do this when things fall apart? More specifically, when the company gets to a point when it does not make objective financial sense for any employee to continue working there, will the leader be able to articulate a vision that’s compelling enough that the people stay out of curiosity?  I believe that Jobs’ greatest achievement as a visionary leader so far was a) getting so many super talented people to continue following him at NeXT, long after the company lost its patina; then b) getting the employees of Apple to buy into his vision when the company was weeks away from bankruptcy. It’s difficult to imagine any other leader being so compelling that they could do these back-to-back and this is why we call this one the Steve Jobs attribute.  The right kind of ambition—The Bill Campbell Attribute Andy Grove once remarked that a company needs highly ambitious executives in order to achieve its goals. However, it’s critical that those executives have “the right kind of ambition”: ambition for the success of the company rather than the “wrong kind of ambition”: ambition for the success of themselves.  One of the biggest misperceptions in our society is that a prerequisite for becoming a CEO is being selfish, ruthless, and callous. In fact, the opposite is true and the reason is obvious. The first thing that any successful CEO must do is get really great people to work for her. Smart people do not want to work for people who do not have their interests in mind and in heart.  Most of us have experienced this in our careers: a bright, ambitious, hard working executive that nobody good wants to work for and who, as a result, delivers performance far worse than one might imagine.  Truly great leaders create an environment where the employees feel that the CEO cares much more about the employees than she cares about herself. In this kind of environment, an amazing thing happens: a huge number of the employees believe that it’s their company and behave accordingly. As the company grows large, these employees become the quality control for the entire organization. They set the standard of work that all future employees must live up to. As in, “Hey, you need to do a better job on that datasheet—you are screwing up my company.”  I call this characteristic the Bill Campbell attribute after my friend Bill who is the best that I’ve ever seen at this. If you talk to people who worked in any of the many organizations that Bill has run, they refer to those organizations as “my organization” or “my company.” A huge part of why he has been so unbelievably strong on this dimension of leadership is that he’s totally authentic. He would happily sacrifice his own economics, fame, glory, and rewards for his employees. When you talk to Bill, you get the feeling that he cares deeply about you and what you have to say, because he does. And all of that shows up in his actions and follow through.  Ability to achieve the vision—The Andy Grove Attribute   The final leg of our leadership stool is competence, pure and simple. If I buy into the vision and believe that the leader cares about me, do I think she can actually achieve the vision? Will I follow her into the jungle with no map forward or back and trust that she will get me out of there?  I like to refer to this as the Andy Grove attribute. Andy Grove will always be my model of CEO competence. He earned a Ph.D. in electrical engineering, wrote the best management book that I’ve ever read (High Output Management), and tirelessly refined his craft. Not only did he write exceptional books on management, he taught management classes at Intel throughout his tenure.  In his classic book, Only the Paranoid Survive, Grove details the story of leading Intel through the dramatic transition from the memory business to the microprocessor business. In doing so, he walked away from nearly all of his revenue. He humbly credits others in the company with coming to the strategic conclusion before he did, but the credit for swiftly and successfully leading the company through the transition goes to Dr. Grove. Changing your primary business as a 16 year old, large, public company raises a lot of questions. As Andy describes in an incident with one of his employees:  One of them attacked me aggressively, asking, “Does it mean that you can conceive of Intel without being in the memory business?” I swallowed hard and said, ‘yes, I guess I can.’ All hell broke loose. Despite shocking many of his best employees with this radical strategy, ultimately the company trusted Andy. They trusted him to rebuild their company around an entirely new business. And that trust turned out to be very well placed.  So, are great leaders born or made? Let’s look at this one attribute at a time:  Articulation of the vision—There is no question that some people are much better story tellers than others. However, it is also true that anybody can greatly improve in this area through focus and hard work. All CEOs should work on the vision component of leadership. Alignment of interests—I am not sure if the Bill Campbell Attribute is impossible to learn, but I am pretty sure that it is impossible to teach. Of the three, this one most fits the bill “born not made.” Ability to achieve the vision—This attribute can absolutely be made; perhaps this is why Andy Grove’s tolerance for incompetence was legendarily low. Indeed, the enemy of competence is sometimes confidence. A CEO should never be so confident that she stops improving her skills. In the end, some attributes of leadership can be improved more than others, but every CEO should work on all three.
At our new venture fund, we’ve been spending time looking into new ways that will make the lives of entrepreneurs seeking funding easier. To that end, we’ve linked up with Ted Wang who has been working on an open source legal project called the Series Seed documents. We’re impressed with his work and are going to use these standard funding documents as part of our seed stage investments wherever appropriate.  We have to give a big shout out to Ted: he nailed this. It’s exactly in step with our intention of letting entrepreneurs focus on building businesses in today’s environment, without having to follow old VC rules.  In a nutshell, entrepreneurs and the businesses they are starting have evolved. Start ups today don’t need to build a manufacturing plant (as DEC, the very first high-tech VC investment, did in 1957) to start a business. They need less money to build a product and prove that it works before scaling the business. Yet, the paperwork involved in funding entrepreneurs hasn’t changed to meet these needs. Series Seed is the first to establish this new way of supporting funding suited for today’s entrepreneurs – and we’re big fans.  Let us know what you think: check out the Series Seed documents, and share your thoughts.  Here’s more background on our thinking behind how entrepreneurship has changed, creating the need for these simplified funding documents. I’m speaking here from the point of view as both an angel investor and a venture capitalist, two very different kinds of investors.  Angels vs. Venture Capitalists Why do angel investors exist? Before answering these questions, it’s useful to ask and answer a related question: why are there angels and why have they become more prominent in the last 10 years? After all, doesn’t the definition of venture capital include all of the activities that angels perform?  The answer lies in the history of technology companies and the differences between how they were built 30 years ago and how they are built now. In the early days of technology venture capital, great firms like Arthur Rock and Kleiner Perkins funded companies like Digital Equipment Corporation (DEC) and Tandem. In those days, building the initial product required a great deal more than a high quality software team. Companies like Tandem had to manufacture their own products. As a result, getting into market with the first idea, meant, among other things, building a factory. Beyond that, almost all technology products required a direct sales force, field engineers, and professional services. A startup might easily employ 50-100 people prior to signing their first customer.  Based on these challenges, startups developed specific requirements for venture capital partners:  Access to large amounts of money to fund the many complex activities Access to very senior executives such as an experienced head of manufacturing Access to early adopter customers Intense, hands-on expert help from the very beginning of the company to avoid serious mistakes In order to both meet these requirements and build profitable businesses themselves, venture capitalists developed an operating model which is still broadly used today:  Raise a large amount of capital from institutional investors Assemble a set of experienced partners who can provide hands-on expertise in building the product and then the company Evaluate each deal very carefully with extensive due diligence and broad partner consensus Employ strong governance to protect the large amount of capital deployed in each deal. This includes requisite board seats and complex deal terms including the ability to control subsequent financings Manage own resources effectively by calculating the amount of capital/number of partners/maximum number of board seats per partner to derive the minimum amount of capital that must be invested in each deal It turns out that building a company has changed quite a bit since the early days of venture-backed technology companies. Building a company like Twitter or Facebook is quite different from building Tandem. Specifically, the risk and cost of building the initial product is dramatically lower. I emphasize product to distinguish it from building the company. Building modern companies is not low risk or low cost: Facebook, for example, faced plenty of competitive and market risks and has raised hundreds of millions of dollars to build their business. But building the initial Facebook product cost well under $1M and did not entail hiring a head of manufacturing or building a factory.  As a result, for a modern startup, funding the initial product can be incompatible with the traditional venture capital model in the following ways:  Lengthy diligence process. Venture capitalists take too long to decide whether or not they want to invest because they are set up to take large risks and have complex processes to evaluate those risks. Too much capital. Venture capitalists need to put too much capital to work – often a VC will want to invest a minimum of $3M. If you only need 4 people to build the product and get it into market, this likely won’t make sense for your business. Board seat. Venture capitalists often require a board seat and, for that matter, a board of directors be formed. If 100% of the company is building the product and the team knows how to do that, then a board of directors may be overkill. In addition, it may be too early to decide who you want to be on the board. As a result of the above, a venture capitalist usually requires a serious commitment from the entrepreneur to pursue an idea that is highly experimental. If the product doesn’t stick, it might make sense for the entrepreneur to pursue a totally different idea or drop the business altogether. This is much easier to do if you’ve raised $300,000 than if you’ve raised $3,000,000.  As entrepreneurs needed someone to bridge the gap between building the initial product and building the company, angel investors stepped up.  Angel investors are typically well-connected, wealthy individuals. They generally use their own money and come with none of the above VC constraints describe above: they don’t go on boards, they don’t need to put in lots of capital (in fact, they usually don’t want to), they prefer dead simple terms (as they often don’t have legal support), they understand the experimental nature of the idea, and they can sometimes decide in a single meeting whether or not to invest.  On the other hand, angels do not manage huge pools of capital, so entrepreneurs need to find someone else to fund the building of the company (as opposed to the product) and most angels do not plan to spend a great deal of time helping entrepreneurs build the company.  One more thing before answering the original question  Before getting back to the need for the Series Seed documents, it’s important to distinguish venture rounds and angel rounds from venture capitalists and angel investors. It’s possible for a venture capitalist to invest in an angel round and vice-versa. Sometimes this is a great idea and sometimes it’s tragic. We’ll first examine the rounds and then the investors.  When should you raise an angel round and when should you raise a VC round? This question really comes down to the company’s development. If you are a small team building a product with the hope of “seeing if it takes” (with the implication being that you’ll try something else if it doesn’t), then you don’t need a board or a lot of money and an angel round is likely the best option. On the other hand, if you’ve developed a strong belief in your product or your product idea and you are in a race against time to take the market, then a venture round is more appropriate. You will benefit from both the extra capital and extra support that comes with a serious and large commitment from your investors.  So who is qualified to invest in each? Obviously angels can invest in angel rounds, but what about VCs? Is it safe to have them participate? The answer turns out to be “if and only if they behave like angels.” What does it mean for a VC to behave like an angel? Well, they must:  Be comfortable investing a small amount of money, e.g. $50,000. Be able to make an investment decision quickly, e.g. in one or two meetings Be able to invest without taking a board seat Not require control of subsequent funding rounds Not impose complex terms If the VC wants to be in the angel round, but refuses to behave like an angel, then entrepreneur beware. Having a VC who behaves like a VC in the angel round can jeopardize subsequent financings. Angels can be great participants in venture rounds, but it’s generally better to have a VC lead those deals as they have more financial and other resources required to build the company.  What does this mean about Andreessen Horowitz and the types of investments we’ll do? As I stated above, at Andreessen Horowitz, we invest in both venture rounds and angel rounds. When we invest in angel rounds, we behave like an angel. As angel investors, we can invest as little as $50,000, we do not take board seats, and we do not require control.  Rooted in this desire to help germinate quality ideas, our support for Seed Source legal docs will allow both us as investors and the entrepreneurs we fund to focus on building a winning product rather than scrutinizing legal docs.
